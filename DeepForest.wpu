#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {loc('eval.py'): {},
                    loc('evaluate.py'): {},
                    loc('predict.py'): {},
                    loc('retrain.py'): {},
                    loc('train.py'): {},
                    loc('train_fixed.py'): {},
                    loc('../keras-retinanet/keras_retinanet/preprocessing/onthefly.py'): {},
                    loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/utils/eval.py'): {}}
debug.exceptions-ignored = {loc('../../miniconda3/envs/DeepForest/lib/python3.6/importlib/_bootstrap.py'): {219: True}}
debug.recent-run-args = {loc('debug.py'): [u'--annotations onthefly data/training/annotations.csv ',
        u'--annotations onthefly data/training/evaluation.csv ',
        u'--anchors onthefly data/training/evaluation.csv ',
        u'onthefly data/training/evaluation.csv --anchors',
        u'onthefly data/training/evaluation.csv',
        u'onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_10.h5 --convert-model --score-threshold 0.05 --suppression-threshold 0.1 --save-path snapshots/images/ ',
        u'--score-threshold 0.05 --suppression-threshold 0.1 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_10.h5 --convert-model '],
                         loc('eval.py'): [u'--score-threshold 0.05 --suppression-threshold 0.1 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_10.h5 --convert-model ',
        u'--score-threshold 0.05 --suppression_threshold 0.1 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_10.h5 --convert-model ',
        u'--score-threshold 0.05 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_10.h5 --convert-model --suppression_threshold 0.1',
        u'--score-threshold 0.05 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_10.h5 --convert-model',
        u'--score-threshold 0.2 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_01.h5 --convert-model',
        u'--score-threshold 0.05 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_01.h5 --convert-model',
        u'--score-threshold 0.35 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_01.h5 --convert-model',
        u'--score-threshold 0.35 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_04.h5 --convert-model',
        u'--score-threshold 0.3 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_04.h5 --convert-model',
        u'--score-threshold 0.25 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_04.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_04.h5 --convert-model',
        u'--score-threshold 0.4 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_04.h5 --convert-model',
        u'--score-threshold 0.4 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_08.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_08.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_05.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_18.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly snapshots/detection.csv snapshots/resnet50_onthefly_18.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly snapshots/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly snapshots/evaluation.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly data/training/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.50 --save-path snapshots/images/ onthefly data/training/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.25 --save-path snapshots/images/ onthefly data/training/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.25 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.25 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_27.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_27.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_28.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_03.h5 --convert-model',
        u'--save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_03.h5 --convert-model',
        u'--save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_01.h5 --convert-model'],
                         loc('evaluate.py'): [u'--logdir=logs/20180524-065707',
        u'--logdir=20180524-065707'],
                         loc('predict.py'): [u'--logdir logs/20180524-065707',
        u'--logdir 20180524-065707',
        u'--logdir 20180521-085302'],
                         loc('../keras-retinanet/keras_retinanet/bin/train.py'): [u'csv /Users/Ben/Documents/keras-retinanet/tests/test-data/annotations.csv /Users/Ben/Documents/keras-retinanet/tests/test-data/classes.csv',
        u'/Users/Ben/Documents/keras-retinanet/tests/test-data/annotations.csv /Users/Ben/Documents/keras-retinanet/tests/test-data/classes.csv']}
debug.remote-hosts = (4,
                      [{'agent-port': 0,
                        'basedir': u'',
                        'debug-port': 0,
                        'forward-x11': False,
                        'hostname': 'b.weinstein@dev1.ufhpc',
                        'id': 'Hipergator',
                        'io-encoding': None,
                        'pyexec': u'',
                        'shared': False,
                        'winghome': '/home/b.weinstein/wing/'}])
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'ZJTPJytlEesMIKzXs2TV5OeGs8'\
        'yol7dB',
        'size-state': 'fullscreen',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.10886252616887648,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          1],
        'notebook_display': 'normal',
        'notebook_percent': 0.5,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'batch_size',
                                       'fReverse': False,
                                       'fSearchText': u'show',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'DeepForest_config',
                                       'fReverse': False,
                                       'fSearchText': u'',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 2607L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/ben/Documents/DeepForest/debug.py': ['s'\
        'elf.config\n',
        'config\n',
        'data=preprocess.load_xml(DeepForest_config["hand_annotations"],Deep'\
        'Forest_config["rgb_res"])\n',
        'data.shape\n',
        "##Preprocess Filters##\nif DeepForest_config['preprocess']['zero_ar"\
        "ea']:\n    data=preprocess.zero_area(data)\n#Write training and eva"\
        "luation data to file for annotations\ndata.to_csv(\"data/training/a"\
        "nnotations.csv\")\n\n",
        'main(DeepForest_config=DeepForest_config)\n',
        'generator\n',
        'generator.size()\n',
        'data\n',
        'train,test=preprocess.split_training(args.annotations,DeepForest_co'\
        'nfig,experiment=None)\n',
        'train\n',
        'test\n'],
                                   u'file:/Users/ben/Documents/DeepForest/eval.py': ['s'\
        'elf.site\n',
        'base_dir + self.annotation_list.rgb_path.unique()[0]\n',
        'base_dir + self.annotation_list\n',
        'train\n',
        'args.annotations\n',
        'self.annotation_list\n',
        'csv_data_file\n',
        'self.image_data.keys()\n',
        'self.image_data.keys\n',
        'self.image_data\n',
        'self.image_data[0]\n',
        'self.image_data[0].keys\n',
        'window_dict\n',
        'len(window_dict)\n',
        'window_dict[0]\n',
        'window_dict[1]\n'],
                                   u'file:/Users/ben/Documents/DeepForest/retrain.py': ['b'\
        'ox=boxes[0]\n',
        'pyplot.imshow(self.image)\n',
        'self.show(self.image,boxes)\n',
        'pyplot.show()\n',
        'draw_annotations(self.image, boxes, color=(0, 0, 255))\n',
        'cv2.imshow("window",self.image)\ncv2.waitKey(0)\n\n',
        'image_scale\n',
        'annotations[:, :4] *= image_scale\n',
        'float(annotations)\n',
        'n[float(i) for i in lst]\n',
        '[float(i) for i in annotations]\n',
        '[float(i) for i in annotations[0]]\n',
        'annotations[0]\n',
        'annotations[0][:, :4] *= image_scale\n',
        'annotations[0] *= image_scale\n',
        'annotations.shape\n',
        'type(annotations)\n',
        'annotations.astype(float)\n',
        'annotations_test=annotations.astype(float)\n',
        'annotations_test[:, :4] *= image_scale\n',
        'annotations[:, :4] *= image_scale',
        'annotations_test\n',
        'self.annotation_dict[key]\n',
        'boxes=np.copy(self.annotation_dict[key])\n',
        'image_index\n',
        'image_name=self.image_names[image_index]\n',
        'image_name\n',
        'row=self.image_data[image_name]\n',
        'row\n',
        'key=row["image"]+"_"+str(row["windows"])\n',
        'boxes=self.annotation_dict[key]\n',
        'np.copy\n',
        'np.copy(a)\n',
        'type(boxes)\n',
        'train_generator.size()\n',
        'a.shape\n',
        'a.shape()\n',
        'a\n',
        'cv2.imshow("window",a);cv2.waitkey(0)\n',
        'cv2.imshow("window",a[0]);cv2.waitkey(0)\n',
        'train_generator\n',
        'a=train_generator.next()\n',
        'a[0]\n',
        'image\n',
        'generator\n',
        'generator.next\n',
        'generator.next()\n',
        'len(a)\n',
        'a[1].shape\n',
        'a[1]\n',
        'a=generator.next()\n',
        'a[0].shape\n',
        'len(a[1])\n',
        'len(image_group)\n',
        'image_group[0]\n',
        'image_group[0].shape\n',
        'import cv2\n',
        'cv2.imsave(image_group[0],"test.png")\n',
        'cv2.imwrite(image_group[0],"test.png")\n',
        'cv2.imwrite("test.png",image_group[0])\n',
        'annotations_group = self.load_annotations_group(group)\n',
        'image_group, annotations_group = self.filter_annotations(image_grou'\
        'p, annotations_group, group)\n',
        'image_group, annotations_group = self.preprocess_group(image_group,'\
        ' annotations_group)\n',
        'len(annotations_group)\n',
        'targets = self.compute_targets(image_group, annotations_group)\n',
        'len(targets)\n',
        'targets\n',
        'image_group\n',
        'annotations_group\n',
        'y\n',
        'y.shape\n',
        'inputs\n',
        'sample_weight    \n',
        'class_weight\n',
        'x\n',
        'len(x)\n',
        'x.shape\n',
        'len(y)\n',
        'y[0].shape\n',
        'y[1].shape\n',
        '800*800*3\n',
        'y[0]\n',
        'y[2].shape\n',
        'array_vals\n',
        'array_vals.shape\n',
        'len(array_vals)\n',
        'array_vals[0]\n',
        'array_vals[0].shape\n',
        'array_vals[1].shape\n',
        'array_vals[2].shape\n',
        'array_vals[3].shape\n',
        'array_vals[4].shape\n',
        'ins.shape\n',
        'ins\n',
        'DeepForest_config\n',
        'single_tile\n',
        'annotations\n',
        'boxes.dtype\n',
        'boxes=boxes.astype("float64")\n',
        'boxes\n'],
                                   u'file:/Users/ben/Documents/DeepForest/train.py': ['c'\
        'onfig\n',
        'self.config\n',
        'image_path\n',
        'site\n',
        'base_dir\n',
        'row\n',
        'image_name\n',
        'self.image_names\n',
        'self.image_data\n',
        'tile_data\n',
        'boxes=np.copy(self.annotation_dict[key])\n',
        'boxes\n',
        'type(boxes)\n',
        'boxes.dtype\n',
        " boxes.dtype==dtype('float64')\n",
        'boxes.dtype==np.float64\n',
        'training.shape\n',
        'len(groups)\n',
        'group\n',
        "groups = [df for _, df in training.groupby('image')]\n",
        'groups\n',
        'training.image.unique(0)\n',
        'training.image.unique()\n',
        '_load_groundtruth\n',
        'DeepForest_config\n',
        'self\n',
        'self.De\n',
        'self.DeepForest_config\n',
        'a=model.predict_on_batch(np.expand_dims(image, axis=0))[:3]\n',
        'len(a)\n',
        'a[0]\n',
        'a[1]\n',
        'a[0].shape\n',
        'a[1].shape\n',
        'generator\n',
        'numpy_image\n',
        'model\n',
        'all_images\n']},
                       'launch-id': None,
                       'sel-line': 2622L,
                       'sel-line-start': 3039879L,
                       'selection_end': 3039879L,
                       'selection_start': 3039879L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 1480L,
                       'folded-linenos': [],
                       'history': {None: ['tile_xml=doc["annotation"]\n',
        'tile_xml.keys()\n',
        'tile_xml["object"]\n',
        'tile_xml=doc["annotation"]["object"]\n',
        'tile_xml\n',
        'len(tile_xml)\n',
        'type(tile_xml)\n',
        'tile_xml[-]\n',
        'tile_xml[0]\n',
        'Tree=tile_xml[0]\n',
        'import pandas as pd\n',
        'pd.from_dict\n',
        "pd.DataFrame.from_dict(orient='rows', dtype=None, columns=None)\n",
        "pd.DataFrame.from_dict(orient='rows', Tree)\n",
        'pd.DataFrame.from_dict(Tree,orient="rows")\n',
        'pd.DataFrame.from_dict(Tree,orient="index")\n',
        'pd.DataFrame.from_dict(Tree)\n',
        'Tree\n',
        'Tree["xmin"]\n',
        'Tree["bndbox"]\n',
        'Tree["bndbox"]["xmin"]\n',
        'for tree in tile_xml:\n    xmin.append(Tree["bndbox"]["xmin"])\n   '\
        ' xmax.append(Tree["bndbox"]["xmax"])\n    ymin.append(Tree["bndbox"'\
        ']["ymin"])\n    ymax.append(Tree["bndbox"]["ymax"])\n\n',
        'xmin=[]\nxmax=[]\nymin=[]\nymax=[]\n\nfor tree in tile_xml:\n    xm'\
        'in.append(Tree["bndbox"]["xmin"])\n    xmax.append(Tree["bndbox"]["'\
        'xmax"])\n    ymin.append(Tree["bndbox"]["ymin"])\n    ymax.append(T'\
        'ree["bndbox"]["ymax"])\n\n',
        'for tree in tile_xml:\n    xmin.append(tree["bndbox"]["xmin"])\n   '\
        ' xmax.append(tree["bndbox"]["xmax"])\n    ymin.append(tree["bndbox"'\
        ']["ymin"])\n    ymax.append(tree["bndbox"]["ymax"])\n\n',
        'xmin=[]\nxmax=[]\nymin=[]\nymax=[]\n\nfor tree in tile_xml:\n    xm'\
        'in.append(tree["bndbox"]["xmin"])\n    xmax.append(tree["bndbox"]["'\
        'xmax"])\n    ymin.append(tree["bndbox"]["ymin"])\n    ymax.append(t'\
        'ree["bndbox"]["ymax"])\n\n',
        'xmin\n',
        'pd.DataFrame([xmin,xmax,ymin,ymax])\n',
        'pd.DataFrame([xmin,xmax,ymin,ymax],orient="rows")\n',
        'pd.DataFrame({xmin,xmax,ymin,ymax})\n',
        'pd.DataFrame({"xmin":xmin})\n',
        'pd.DataFrame({"xmin":xmin,"xmax":xmax,"ymin":ymin,"ymax":ymax})\n',
        'range(len(tile_xml))\n',
        'import numpy as np\n',
        'np.arange(len(tile_xml))\n',
        'doc["annotation"]["filename"]\n',
        'len(doc)\n',
        'tile=doc[0]\n',
        'doc[0]\n',
        'doc[1]\n',
        'doc.keys\n',
        'doc.keys()\n',
        'doc["annotations"]\n',
        'doc["annotation"].keys()\n',
        'len(doc["annotation"])\n',
        '#grab objects\n  tile_xml=doc["annotation"]["object"]\n  \n  xmin=['\
        ']\n  xmax=[]\n  ymin=[]\n  ymax=[]\n  \n  #Construct frame\n  for t'\
        'ree in tile_xml:\n      xmin.append(tree["bndbox"]["xmin"])\n      '\
        'xmax.append(tree["bndbox"]["xmax"])\n      ymin.append(tree["bndbox'\
        '"]["ymin"])\n      ymax.append(tree["bndbox"]["ymax"])\n      \n  t'\
        'reeID=np.arange(len(tile_xml))\n  rgb_path=doc["annotation"]["filen'\
        'ame"]\n  \n  frame=pd.DataFrame({"treeID":treeID,"xmin":xmin,"xmax"'\
        ':xmax,"ymin":ymin,"ymax":ymax,"rgb_path":rgb_path})\n\n',
        'tile_xml=doc["annotation"]["object"]\n\nxmin=[]\nxmax=[]\nymin=[]\n'\
        'ymax=[]\n\n#Construct frame\nfor tree in tile_xml:\n    xmin.append'\
        '(tree["bndbox"]["xmin"])\n    xmax.append(tree["bndbox"]["xmax"])\n'\
        '    ymin.append(tree["bndbox"]["ymin"])\n    ymax.append(tree["bndb'\
        'ox"]["ymax"])\n    \ntreeID=np.arange(len(tile_xml))\nrgb_path=doc['\
        '"annotation"]["filename"]\n\nframe=pd.DataFrame({"treeID":treeID,"x'\
        'min":xmin,"xmax":xmax,"ymin":ymin,"ymax":ymax,"rgb_path":rgb_path})'\
        '\n\n',
        'frame[1]\n',
        'frame.index\n',
        'frame.index()\n',
        'frame["0"]\n',
        'frame[0]\n',
        'frame.keys\n',
        'frame.keys()\n',
        'frame.treeID\n',
        'frame.to_csv("test.csv")\n',
        'tree\n',
        "tree['name']\n",
        'label=[0,1]\n',
        'label=["Tree","Background"]\n',
        'label\n',
        'int(label)\n',
        "#grab objects\ntile_xml=doc[\"annotation\"][\"object\"]\n\nxmin=[]"\
        "\nxmax=[]\nymin=[]\nymax=[]\nlabel=[]\n\n#Construct frame\nfor tree"\
        " in tile_xml:\n    xmin.append(tree[\"bndbox\"][\"xmin\"])\n    xma"\
        "x.append(tree[\"bndbox\"][\"xmax\"])\n    ymin.append(tree[\"bndbox"\
        "\"][\"ymin\"])\n    ymax.append(tree[\"bndbox\"][\"ymax\"])\n    la"\
        "bel.append(tree['name'])\n    \ntreeID=np.arange(len(tile_xml))\nrg"\
        "b_path=doc[\"annotation\"][\"filename\"]\n\nframe=pd.DataFrame({\""\
        "treeID\":treeID,\"xmin\":xmin,\"xmax\":xmax,\"ymin\":ymin,\"ymax\""\
        ":ymax,\"rgb_path\":rgb_path,\"label\":label})\n\n",
        'frame.label\n',
        'frame.label.to_numeric\n',
        'pd.to_numeric(label)\n',
        'frame=pd.DataFrame({"treeID":treeID,"xmin":xmin,"xmax":xmax,"ymin":'\
        'ymin,"ymax":ymax,"rgb_path":rgb_path,"label":label,"numeric_label":'\
        '1})\n',
        'doc\n',
        'doc["annotation"]\n',
        'doc["annotation"]["folder"]\n',
        'os\n',
        'import os\n',
        'os.path.join("data",doc["annotation"]["folder"] ,rgb_path)\n',
        'import rasterio\n',
        'full_path=os.path.join("data",doc["annotation"]["folder"] ,rgb_path'\
        ')\n',
        'with rasterio.open(full_path) as dataset:\n    bounds=dataset.bound'\
        's\n\n',
        'bounds\n',
        "#grab objects\ntile_xml=doc[\"annotation\"][\"object\"]\n\nxmin=[]"\
        "\nxmax=[]\nymin=[]\nymax=[]\nlabel=[]\n\n#Construct frame\nfor tree"\
        " in tile_xml:\n    xmin.append(tree[\"bndbox\"][\"xmin\"])\n    xma"\
        "x.append(tree[\"bndbox\"][\"xmax\"])\n    ymin.append(tree[\"bndbox"\
        "\"][\"ymin\"])\n    ymax.append(tree[\"bndbox\"][\"ymax\"])\n    la"\
        "bel.append(tree['name'])\n    \ntreeID=np.arange(len(tile_xml))\nrg"\
        "b_path=doc[\"annotation\"][\"filename\"]\n\nframe=pd.DataFrame({\""\
        "treeID\":treeID,\"xmin\":xmin,\"xmax\":xmax,\"ymin\":ymin,\"ymax\""\
        ":ymax,\"rgb_path\":rgb_path,\"label\":label,\"numeric_label\":1})\n"\
        "\n#read in tile to get dimensions\nfull_path=os.path.join(\"data\""\
        ",doc[\"annotation\"][\"folder\"] ,rgb_path)\nwith rasterio.open(ful"\
        "l_path) as dataset:\n    bounds=dataset.bounds     \n\nframe.tile_x"\
        "min=bounds.left\nframe.tile_xmax=bounds.right\nframe.tile_ymin=boun"\
        "ds.bottom\nframe.tile_ymax=bounds.top\n\n\n",
        ' frame.tile_ymax\n',
        'frame=pd.DataFrame({"treeID":treeID,"xmin":xmin,"xmax":xmax,"ymin":'\
        'ymin,"ymax":ymax,"rgb_path":rgb_path,"label":label,\n              '\
        '      "numeric_label":1,\n                    "tile_xmin":bounds.le'\
        'ft,\n                    "tile_xmax":bounds.right,\n               '\
        '     "tile_ymin":bounds.bottom,\n                    "tile_ymax":bo'\
        'unds.top})\n\n',
        'frame.head()\n',
        'frame=preprocess.load_xml(config["hand_annotations"])\n',
        '4/"3"\n',
        'config\n',
        'frame\n',
        '1-float(config["validation_percent"])/100\n',
        '1-float(5)/100\n',
        'import numpy\n',
        'numpy.random.seed(2)\n',
        'numpy.random.randint(1)\n',
        'numpy.random.randint()\n',
        'numpy.random.randint(1,100)\n',
        'import numpy\nnumpy.random.seed(2)\nnumpy.random.randint(1,100)\n\n',
        'import numpy\nnumpy.random.seed(2)\nx=numpy.random.randint(1,100)\n'\
        'print(x)\n\n',
        'if None: print("hi")\n',
        'if not None: print("hi")\n',
        'if a: print("hi")\n',
        'a="jon"\n',
        'if not a: print("hi")\n',
        'a=None\n',
        'if not a == None: print("hi")\n']},
                       'launch-id': None,
                       'sel-line': 1497L,
                       'sel-line-start': 1396331L,
                       'selection_end': 1396331L,
                       'selection_start': 1396331L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {'last-percent': 0.8,
                       'toolbox-percent': 1.0,
                       'toolbox-tree-sel': ''})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('DeepForest/evaluation.py'),
        {'attrib-starts': [('create_polygon',
                            259)],
         'first-line': 239L,
         'folded-linenos': [],
         'sel-line': 259L,
         'sel-line-start': 8331L,
         'selection_end': 8372L,
         'selection_start': 8372L,
         'zoom': 0L},
        1538066005.709423],
        [loc('DeepForest/onthefly_generator.py'),
         {'attrib-starts': [('OnTheFlyGenerator',
                             165),
                            ('OnTheFlyGenerator.load_image',
                             253)],
          'first-line': 256L,
          'folded-linenos': [],
          'sel-line': 263L,
          'sel-line-start': 8489L,
          'selection_end': 8579L,
          'selection_start': 8579L,
          'zoom': 0L},
         1538066008.962603],
        [loc('DeepForest/onthefly_generator.py'),
         {'attrib-starts': [('OnTheFlyGenerator',
                             165),
                            ('OnTheFlyGenerator.load_annotations',
                             284)],
          'first-line': 286L,
          'folded-linenos': [],
          'sel-line': 298L,
          'sel-line-start': 9710L,
          'selection_end': 9754L,
          'selection_start': 9752L,
          'zoom': 0L},
         1538066009.139158],
        [loc('DeepForest/onthefly_generator.py'),
         {'attrib-starts': [('OnTheFlyGenerator',
                             165),
                            ('OnTheFlyGenerator.load_image',
                             253)],
          'first-line': 257L,
          'folded-linenos': [],
          'sel-line': 264L,
          'sel-line-start': 8580L,
          'selection_end': 8635L,
          'selection_start': 8634L,
          'zoom': 0L},
         1538066012.071685],
        [loc('DeepForest/onthefly_generator.py'),
         {'attrib-starts': [('fetch_annotations',
                             53)],
          'first-line': 51L,
          'folded-linenos': [],
          'sel-line': 56L,
          'sel-line-start': 1538L,
          'selection_end': 1595L,
          'selection_start': 1592L,
          'zoom': 0L},
         1538066013.291041],
        [loc('train.py'),
         {'attrib-starts': [('main',
                             348)],
          'first-line': 502L,
          'folded-linenos': [274L],
          'sel-line': 394L,
          'sel-line-start': 16087L,
          'selection_end': 16148L,
          'selection_start': 16147L,
          'zoom': 0L},
         1538066021.100114],
        [loc('train.py'),
         {'attrib-starts': [('create_generators',
                             227)],
          'first-line': 232L,
          'folded-linenos': [274L],
          'sel-line': 247L,
          'sel-line-start': 8897L,
          'selection_end': 8913L,
          'selection_start': 8908L,
          'zoom': 0L},
         1538066022.306415],
        [loc('train.py'),
         {'attrib-starts': [],
          'first-line': 433L,
          'folded-linenos': [277L],
          'sel-line': 452L,
          'sel-line-start': 18002L,
          'selection_end': 18015L,
          'selection_start': 18011L,
          'zoom': 0L},
         1538066275.466114],
        [loc('train.py'),
         {'attrib-starts': [],
          'first-line': 441L,
          'folded-linenos': [277L],
          'sel-line': 453L,
          'sel-line-start': 18016L,
          'selection_end': 18045L,
          'selection_start': 18045L,
          'zoom': 0L},
         1538066286.396893],
        [loc('_config_debug.yml'),
         {'attrib-starts': [],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 20L,
          'sel-line-start': 349L,
          'selection_end': 365L,
          'selection_start': 349L,
          'zoom': 0L},
         1538066290.522571],
        [loc('train.py'),
         {'attrib-starts': [],
          'first-line': 439L,
          'folded-linenos': [277L],
          'sel-line': 451L,
          'sel-line-start': 17997L,
          'selection_end': 18001L,
          'selection_start': 18001L,
          'zoom': 0L},
         1538066314.469491],
        [loc('DeepForest/preprocess.py'),
         {'attrib-starts': [('split_training',
                             138)],
          'first-line': 135L,
          'folded-linenos': [],
          'sel-line': 147L,
          'sel-line-start': 4515L,
          'selection_end': 4523L,
          'selection_start': 4523L,
          'zoom': 0L},
         1538071779.143951],
        [loc('DeepForest/onthefly_generator.py'),
         {'attrib-starts': [('fetch_annotations',
                             53)],
          'first-line': 51L,
          'folded-linenos': [],
          'sel-line': 56L,
          'sel-line-start': 1538L,
          'selection_end': 1595L,
          'selection_start': 1592L,
          'zoom': 0L},
         1538071780.957291],
        [loc('train.py'),
         {'attrib-starts': [('create_generators',
                             227)],
          'first-line': 239L,
          'folded-linenos': [276L],
          'sel-line': 251L,
          'sel-line-start': 9149L,
          'selection_end': 9149L,
          'selection_start': 9149L,
          'zoom': 0L},
         1538072081.298749],
        [loc('_config.yml'),
         {'attrib-starts': [],
          'first-line': 2L,
          'folded-linenos': [],
          'sel-line': 14L,
          'sel-line-start': 389L,
          'selection_end': 407L,
          'selection_start': 407L,
          'zoom': 0L},
         1538072646.638239],
        [loc('DeepForest/preprocess.py'),
         {'attrib-starts': [('split_training',
                             138)],
          'first-line': 135L,
          'folded-linenos': [],
          'sel-line': 149L,
          'sel-line-start': 4540L,
          'selection_end': 4583L,
          'selection_start': 4583L,
          'zoom': 0L},
         1538072848.764038],
        [loc('DeepForest/preprocess.py'),
         {'attrib-starts': [('split_training',
                             138)],
          'first-line': 174L,
          'folded-linenos': [],
          'sel-line': 187L,
          'sel-line-start': 5917L,
          'selection_end': 5952L,
          'selection_start': 5952L,
          'zoom': 0L},
         1538073390.795014],
        [loc('_config.yml'),
         {'attrib-starts': [],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 28L,
          'sel-line-start': 820L,
          'selection_end': 840L,
          'selection_start': 820L,
          'zoom': 0L},
         1538073404.581343],
        [loc('_config_debug.yml'),
         {'attrib-starts': [],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 28L,
          'sel-line-start': 502L,
          'selection_end': 521L,
          'selection_start': 521L,
          'zoom': 0L},
         1538073408.908921],
        [loc('train.py'),
         {'attrib-starts': [('create_generators',
                             227)],
          'first-line': 239L,
          'folded-linenos': [276L],
          'sel-line': 251L,
          'sel-line-start': 9149L,
          'selection_end': 9149L,
          'selection_start': 9149L,
          'zoom': 0L},
         1538073438.961695]],
        20),
        'current-loc': loc('DeepForest/preprocess.py'),
        'editor-state-list': [(loc('DeepForest/callbacks.py'),
                               {'attrib-starts': [('jaccardCallback',
        4),
        ('jaccardCallback.on_epoch_end',
         34)],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 42L,
                                'sel-line-start': 1962L,
                                'selection_end': 1983L,
                                'selection_start': 1974L,
                                'zoom': 0L}),
                              (loc('../keras-retinanet/keras_retinanet/callbacks/eval.py'),
                               {'attrib-starts': [('Evaluate',
        20),
        ('Evaluate.on_epoch_end',
         52)],
                                'first-line': 3L,
                                'folded-linenos': [],
                                'sel-line': 63L,
                                'sel-line-start': 2771L,
                                'selection_end': 2809L,
                                'selection_start': 2809L,
                                'zoom': 0L}),
                              (loc('debug.py'),
                               {'attrib-starts': [],
                                'first-line': 98L,
                                'folded-linenos': [],
                                'sel-line': 175L,
                                'sel-line-start': 6381L,
                                'selection_end': 6407L,
                                'selection_start': 6407L,
                                'zoom': 0L}),
                              (loc('eval.py'),
                               {'attrib-starts': [],
                                'first-line': 19L,
                                'folded-linenos': [],
                                'sel-line': 35L,
                                'sel-line-start': 1107L,
                                'selection_end': 1145L,
                                'selection_start': 1145L,
                                'zoom': 0L}),
                              (loc('DeepForest/evaluation.py'),
                               {'attrib-starts': [('create_polygon',
        259)],
                                'first-line': 239L,
                                'folded-linenos': [],
                                'sel-line': 259L,
                                'sel-line-start': 8331L,
                                'selection_end': 8372L,
                                'selection_start': 8372L,
                                'zoom': 0L}),
                              (loc('DeepForest/onthefly_generator.py'),
                               {'attrib-starts': [('fetch_annotations',
        53)],
                                'first-line': 51L,
                                'folded-linenos': [],
                                'sel-line': 56L,
                                'sel-line-start': 1538L,
                                'selection_end': 1595L,
                                'selection_start': 1592L,
                                'zoom': 0L}),
                              (loc('DeepForest/preprocess.py'),
                               {'attrib-starts': [('split_training',
        138)],
                                'first-line': 174L,
                                'folded-linenos': [],
                                'sel-line': 187L,
                                'sel-line-start': 5917L,
                                'selection_end': 5952L,
                                'selection_start': 5952L,
                                'zoom': 0L}),
                              (loc('train.py'),
                               {'attrib-starts': [('create_generators',
        227)],
                                'first-line': 239L,
                                'folded-linenos': [276L],
                                'sel-line': 251L,
                                'sel-line-start': 9149L,
                                'selection_end': 9149L,
                                'selection_start': 9149L,
                                'zoom': 0L}),
                              (loc('../keras-retinanet/keras_retinanet/utils/eval.py'),
                               {'attrib-starts': [('_get_detections',
        56)],
                                'first-line': 97L,
                                'folded-linenos': [],
                                'sel-line': 100L,
                                'sel-line-start': 3586L,
                                'selection_end': 3632L,
                                'selection_start': 3632L,
                                'zoom': 0L}),
                              (loc('../keras-retinanet/keras_retinanet/utils/visualization.py'),
                               {'attrib-starts': [],
                                'first-line': 11L,
                                'folded-linenos': [],
                                'sel-line': 31L,
                                'sel-line-start': 901L,
                                'selection_end': 1004L,
                                'selection_start': 901L,
                                'zoom': 0L}),
                              (loc('_config.yml'),
                               {'attrib-starts': [],
                                'first-line': 10L,
                                'folded-linenos': [],
                                'sel-line': 28L,
                                'sel-line-start': 820L,
                                'selection_end': 840L,
                                'selection_start': 820L,
                                'zoom': 0L}),
                              (loc('_config_debug.yml'),
                               {'attrib-starts': [],
                                'first-line': 10L,
                                'folded-linenos': [],
                                'sel-line': 28L,
                                'sel-line-start': 502L,
                                'selection_end': 521L,
                                'selection_start': 521L,
                                'zoom': 0L}),
                              (loc('_retrain_config.yml'),
                               {'attrib-starts': [],
                                'first-line': 8L,
                                'folded-linenos': [],
                                'sel-line': 25L,
                                'sel-line-start': 559L,
                                'selection_end': 654L,
                                'selection_start': 654L,
                                'zoom': 0L}),
                              (loc('_retrain_config_debug.yml'),
                               {'attrib-starts': [],
                                'first-line': 19L,
                                'folded-linenos': [],
                                'sel-line': 29L,
                                'sel-line-start': 694L,
                                'selection_end': 709L,
                                'selection_start': 694L,
                                'zoom': 0L})],
        'has-focus': True,
        'locked': False},
        [loc('DeepForest/callbacks.py'),
         loc('../keras-retinanet/keras_retinanet/callbacks/eval.py'),
         loc('debug.py'),
         loc('eval.py'),
         loc('DeepForest/evaluation.py'),
         loc('DeepForest/onthefly_generator.py'),
         loc('DeepForest/preprocess.py'),
         loc('train.py'),
         loc('../keras-retinanet/keras_retinanet/utils/eval.py'),
         loc('../keras-retinanet/keras_retinanet/utils/visualization.py'),
         loc('_config.yml'),
         loc('_config_debug.yml'),
         loc('_retrain_config.yml'),
         loc('_retrain_config_debug.yml')]),
                               'open_files': [u'_retrain_config_debug.yml',
        u'_retrain_config.yml',
        u'../keras-retinanet/keras_retinanet/callbacks/eval.py',
        u'DeepForest/callbacks.py',
        u'../keras-retinanet/keras_retinanet/utils/visualization.py',
        u'debug.py',
        u'eval.py',
        u'../keras-retinanet/keras_retinanet/utils/eval.py',
        u'DeepForest/evaluation.py',
        u'DeepForest/onthefly_generator.py',
        u'_config.yml',
        u'_config_debug.yml',
        u'train.py',
        u'DeepForest/preprocess.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.3724409448818898},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         0,
                         1440,
                         900)}]}
guimgr.recent-documents = [loc('DeepForest/preprocess.py'),
                           loc('train.py'),
                           loc('_config_debug.yml'),
                           loc('_config.yml'),
                           loc('DeepForest/onthefly_generator.py'),
                           loc('DeepForest/evaluation.py'),
                           loc('../keras-retinanet/keras_retinanet/utils/eval.py'),
                           loc('eval.py'),
                           loc('debug.py'),
                           loc('../keras-retinanet/keras_retinanet/utils/visualization.py'),
                           loc('DeepForest/callbacks.py'),
                           loc('../keras-retinanet/keras_retinanet/callbacks/eval.py'),
                           loc('_retrain_config.yml'),
                           loc('_retrain_config_debug.yml')]
guimgr.visual-state = {loc('DeepForest/CropGenerator.py'): {'attrib-starts': [('d'\
        'ata2geojson',
        113)],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 3378L,
        'selection_end': 3385L,
        'selection_start': 3385L,
        'zoom': 0L},
                       loc('DeepForest/Lidar.py'): {'attrib-starts': [('prep'\
        'rocess',
        14)],
        'first-line': 93L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 722L,
        'selection_end': 770L,
        'selection_start': 722L,
        'zoom': 0L},
                       loc('DeepForest/README.md'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepForest/RGB.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepForest/callbacks.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 458L,
        'selection_end': 458L,
        'selection_start': 458L,
        'zoom': 0L},
                       loc('DeepForest/config.py'): {'attrib-starts': [('loa'\
        'd_config',
        3)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 24L,
        'sel-line-start': 1167L,
        'selection_end': 1234L,
        'selection_start': 1234L,
        'zoom': 0L},
                       loc('DeepForest/dask_utils.py'): {'attrib-starts': [('s'\
        'tart_dask',
        4)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 126L,
        'selection_end': 130L,
        'selection_start': 130L,
        'zoom': 0L},
                       loc('DeepForest/neon_eval.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 3L,
        'sel-line-start': 91L,
        'selection_end': 125L,
        'selection_start': 125L,
        'zoom': 0L},
                       loc('DeepForest/onthefly_generator.py'): {'attrib-sta'\
        'rts': [('_read_classes',
                 38)],
        'first-line': 103L,
        'folded-linenos': [],
        'sel-line': 44L,
        'sel-line-start': 1239L,
        'selection_end': 1243L,
        'selection_start': 1243L,
        'zoom': 0L},
                       loc('DeepForest/pointcloud.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepForest/preprocess.py'): {'attrib-starts': [('s'\
        'plit_training',
        138)],
        'first-line': 184L,
        'folded-linenos': [],
        'sel-line': 196L,
        'sel-line-start': 6261L,
        'selection_end': 6318L,
        'selection_start': 6318L,
        'zoom': 0L},
                       loc('DeepForest/sliding_window.py'): {'attrib-starts': [('l'\
        'oad',
        14)],
        'first-line': 11L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 484L,
        'selection_end': 488L,
        'selection_start': 488L,
        'zoom': 0L},
                       loc('DeepForest/tools.py'): {'attrib-starts': [],
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 712L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepForest/untitled-2.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('HPC/submit_cpu_job.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 646L,
        'selection_end': 652L,
        'selection_start': 652L,
        'zoom': 0L},
                       loc('HPC/submit_eval.sh'): {'attrib-starts': [],
        'first-line': 7L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 723L,
        'selection_end': 723L,
        'selection_start': 723L,
        'zoom': 0L},
                       loc('HPC/submit_job.sh'): {'attrib-starts': [],
        'first-line': 12L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 897L,
        'selection_end': 913L,
        'selection_start': 913L,
        'zoom': 0L},
                       loc('HPC/submit_retraining.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 686L,
        'selection_end': 686L,
        'selection_start': 686L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 42L,
        'sel-line-start': 1588L,
        'selection_end': 1588L,
        'selection_start': 1588L,
        'zoom': 0L},
                       loc('RGB.py'): {'attrib-starts': [],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 0L,
                                       'sel-line-start': 0L,
                                       'selection_end': 0L,
                                       'selection_start': 0L,
                                       'zoom': 0L},
                       loc('_config.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 491L,
        'selection_end': 558L,
        'selection_start': 511L,
        'zoom': 0L},
                       loc('_config_debug.yml'): {'attrib-starts': [],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 103L,
        'selection_end': 115L,
        'selection_start': 115L,
        'zoom': 0L},
                       loc('_retrain_config.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 309L,
        'selection_end': 329L,
        'selection_start': 329L,
        'zoom': 0L},
                       loc('_retrain_config_debug.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 1080L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('config.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('data/SJER/annotations/SJER_002.xml'): {'attrib-s'\
        'tarts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 472L,
        'selection_end': 500L,
        'selection_start': 500L,
        'zoom': 0L},
                       loc('debug.py'): {'attrib-starts': [('main',
        139)],
        'first-line': 160L,
        'folded-linenos': [],
        'sel-line': 152L,
        'sel-line-start': 5728L,
        'selection_end': 5763L,
        'selection_start': 5763L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('eval.py'): {'attrib-starts': [('main',
        97)],
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 178L,
        'sel-line-start': 7086L,
        'selection_end': 7140L,
        'selection_start': 7140L,
        'zoom': 0L},
                       loc('install_dependencies.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 251L,
        'selection_end': 251L,
        'selection_start': 251L,
        'zoom': 0L},
                       loc('models/inception.py'): {'attrib-starts': [('get_'\
        'model',
        4)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 197L,
        'selection_end': 245L,
        'selection_start': 245L,
        'zoom': 0L},
                       loc('models/rgb.py'): {'attrib-starts': [('get_model',
        6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 141L,
        'selection_end': 221L,
        'selection_start': 221L,
        'zoom': 0L},
                       loc('onthefly_generator.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('predict.py'): {'attrib-starts': [('view_predicti'\
        'ons',
        38)],
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 41L,
        'sel-line-start': 1071L,
        'selection_end': 1075L,
        'selection_start': 1075L,
        'zoom': 0L},
                       loc('retrain.py'): {'attrib-starts': [('main',
        327)],
        'first-line': 446L,
        'folded-linenos': [],
        'sel-line': 406L,
        'sel-line-start': 16623L,
        'selection_end': 16628L,
        'selection_start': 16628L,
        'zoom': 0L},
                       loc('tests/__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_Lidar.py'): {'attrib-starts': [('test'\
        '_Lidar',
        2)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 207L,
        'selection_end': 207L,
        'selection_start': 207L,
        'zoom': 0L},
                       loc('train.py'): {'attrib-starts': [('create_callback'\
        's',
        135)],
        'first-line': 184L,
        'folded-linenos': [206L,
                           253L,
                           284L],
        'sel-line': 202L,
        'sel-line-start': 7332L,
        'selection_end': 7346L,
        'selection_start': 7346L,
        'zoom': 0L},
                       loc('train_retinanet.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepMeerkat/training/Classification/GenerateBoxes_new.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../TreeSegmentation/analysis/SubmitR.sh'): {'att'\
        'rib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 602L,
        'selection_end': 602L,
        'selection_start': 602L,
        'zoom': 0L},
                       loc('../TreeSegmentation/analysis/overlapCompetition.md'): {'a'\
        'ttrib-starts': [],
        'first-line': 81L,
        'folded-linenos': [],
        'sel-line': 98L,
        'sel-line-start': 2125L,
        'selection_end': 2125L,
        'selection_start': 2125L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/_config_debug.yml'): {'a'\
        'ttrib-starts': [],
        'first-line': 1L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 246L,
        'selection_end': 246L,
        'selection_start': 246L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/config.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 494L,
        'selection_end': 494L,
        'selection_start': 494L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/debug.py'): {'a'\
        'ttrib-starts': [('run',
                          164)],
        'first-line': 143L,
        'folded-linenos': [],
        'sel-line': 198L,
        'sel-line-start': 8393L,
        'selection_end': 8500L,
        'selection_start': 8393L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/eval_test.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 31L,
        'sel-line-start': 1064L,
        'selection_end': 1064L,
        'selection_start': 1064L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/evaluate.py'): {'a'\
        'ttrib-starts': [('main',
                          114)],
        'first-line': 137L,
        'folded-linenos': [],
        'sel-line': 151L,
        'sel-line-start': 5982L,
        'selection_end': 5999L,
        'selection_start': 5999L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('create_generators',
                          204)],
        'first-line': 198L,
        'folded-linenos': [],
        'sel-line': 211L,
        'sel-line-start': 7748L,
        'selection_end': 7767L,
        'selection_start': 7767L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/callbacks/eval.py'): {'a'\
        'ttrib-starts': [('Evaluate',
                          21),
                         ('Evaluate.on_epoch_end',
                          53)],
        'first-line': 82L,
        'folded-linenos': [],
        'sel-line': 112L,
        'sel-line-start': 4794L,
        'selection_end': 4794L,
        'selection_start': 4794L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/layers/filter_detections.py'): {'a'\
        'ttrib-starts': [('FilterDetections',
                          114),
                         ('FilterDetections.__init__',
                          118)],
        'first-line': 119L,
        'folded-linenos': [],
        'sel-line': 133L,
        'sel-line-start': 5906L,
        'selection_end': 6016L,
        'selection_start': 5906L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/models/resnet.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/models/retinanet.py'): {'a'\
        'ttrib-starts': [('retinanet',
                          256)],
        'first-line': 245L,
        'folded-linenos': [],
        'sel-line': 256L,
        'sel-line-start': 9545L,
        'selection_end': 9559L,
        'selection_start': 9559L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/preprocessing/csv_generator.py'): {'a'\
        'ttrib-starts': [('CSVGenerator',
                          112),
                         ('CSVGenerator.__init__',
                          118)],
        'first-line': 145L,
        'folded-linenos': [],
        'sel-line': 159L,
        'sel-line-start': 5509L,
        'selection_end': 5509L,
        'selection_start': 5509L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/preprocessing/generator.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 20L,
        'folded-linenos': [],
        'sel-line': 35L,
        'sel-line-start': 955L,
        'selection_end': 956L,
        'selection_start': 956L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/preprocessing/lidar_crop.py'): {'a'\
        'ttrib-starts': [('compute_chm',
                          50)],
        'first-line': 27L,
        'folded-linenos': [],
        'sel-line': 68L,
        'sel-line-start': 2217L,
        'selection_end': 2221L,
        'selection_start': 2221L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/preprocessing/onthefly.py'): {'a'\
        'ttrib-starts': [('OnTheFlyGenerator',
                          219),
                         ('OnTheFlyGenerator.load_annotations',
                          353)],
        'first-line': 350L,
        'folded-linenos': [],
        'sel-line': 367L,
        'sel-line-start': 12388L,
        'selection_end': 12439L,
        'selection_start': 12439L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/anchors.py'): {'a'\
        'ttrib-starts': [('bbox_transform',
                          285)],
        'first-line': 298L,
        'folded-linenos': [],
        'sel-line': 303L,
        'sel-line-start': 11676L,
        'selection_end': 11698L,
        'selection_start': 11698L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/colors.py'): {'a'\
        'ttrib-starts': [('label_color',
                          3)],
        'first-line': 91L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 436L,
        'selection_end': 484L,
        'selection_start': 484L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/compute_overlap.pyx'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 284L,
        'selection_end': 303L,
        'selection_start': 303L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/config.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 678L,
        'selection_end': 678L,
        'selection_start': 678L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/eval.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 6L,
        'folded-linenos': [],
        'sel-line': 25L,
        'sel-line-start': 782L,
        'selection_end': 782L,
        'selection_start': 782L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/image.py'): {'a'\
        'ttrib-starts': [('resize_image',
                          181)],
        'first-line': 184L,
        'folded-linenos': [],
        'sel-line': 198L,
        'sel-line-start': 6842L,
        'selection_end': 6910L,
        'selection_start': 6910L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/model.py'): {'a'\
        'ttrib-starts': [('freeze',
                          17)],
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 600L,
        'selection_end': 642L,
        'selection_start': 642L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/visualization.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 127L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 5416L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../keras-retinanet/profile.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../keras-retinanet/tests/bin/test_train.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 67L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 634L,
        'selection_end': 634L,
        'selection_start': 634L,
        'zoom': 0L},
                       loc('../keras-retinanet/tests/preprocessing/profile_onthefly.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 179L,
        'selection_end': 190L,
        'selection_start': 190L,
        'zoom': 0L},
                       loc('../keras-retinanet/tests/preprocessing/test_csv_generator.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 23L,
        'sel-line-start': 693L,
        'selection_end': 713L,
        'selection_start': 698L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/cloud.py'): {'attrib-starts': [('C'\
        'loud',
        41),
        ('Cloud.filter_z',
         152)],
        'first-line': 148L,
        'folded-linenos': [],
        'sel-line': 162L,
        'sel-line-start': 5941L,
        'selection_end': 5991L,
        'selection_start': 5991L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/metrics2.py'): {'attrib-starts': [('m'\
        'ode',
        12)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 477L,
        'selection_end': 480L,
        'selection_start': 480L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/pointcloud2.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/rasterizer.py'): {'attrib-starts': [('G'\
        'rid',
        7),
        ('Grid.__init__',
         14)],
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 827L,
        'selection_end': 838L,
        'selection_start': 838L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/test.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 250L,
        'selection_end': 286L,
        'selection_start': 286L,
        'zoom': 0L},
                       loc('../temp/keras-retinanet/keras_retinanet/callbacks/eval.py'): {'a'\
        'ttrib-starts': [('Evaluate',
                          21),
                         ('Evaluate.on_epoch_end',
                          63)],
        'first-line': 19L,
        'folded-linenos': [],
        'sel-line': 110L,
        'sel-line-start': 4438L,
        'selection_end': 4476L,
        'selection_start': 4476L,
        'zoom': 0L},
                       loc('../temp/keras-retinanet/keras_retinanet/utils/eval.py'): {'a'\
        'ttrib-starts': [('JaccardEvaluate',
                          256)],
        'first-line': 268L,
        'folded-linenos': [],
        'sel-line': 276L,
        'sel-line-start': 10611L,
        'selection_end': 10624L,
        'selection_start': 10624L,
        'zoom': 0L},
                       loc('../temp/keras-retinanet/keras_retinanet/utils/visualization.py'): {'a'\
        'ttrib-starts': [('draw_ground_overlap',
                          111)],
        'first-line': 127L,
        'folded-linenos': [],
        'sel-line': 149L,
        'sel-line-start': 5416L,
        'selection_end': 5416L,
        'selection_start': 5416L,
        'zoom': 0L},
                       loc('../temp/keras-retinanet/setup.py'): {'attrib-sta'\
        'rts': [],
        'first-line': 8L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 1192L,
        'selection_end': 1269L,
        'selection_start': 1269L,
        'zoom': 0L},
                       loc('../train.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Downloads/DeepForest.out'): {'attrib-start'\
        's': [],
        'first-line': 275L,
        'folded-linenos': [],
        'sel-line': 12L,
        'sel-line-start': 1031L,
        'selection_end': 1077L,
        'selection_start': 1077L,
        'zoom': 0L},
                       loc('../../Downloads/Miniconda3-latest-MacOSX-x86_64.sh'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/importlib/_bootstrap.py'): {'a'\
        'ttrib-starts': [('_lock_unlock_module',
                          193)],
        'first-line': 204L,
        'folded-linenos': [],
        'sel-line': 204L,
        'sel-line-start': 6252L,
        'selection_end': 6276L,
        'selection_start': 6276L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/posixpath.py'): {'a'\
        'ttrib-starts': [('split',
                          103)],
        'first-line': 97L,
        'folded-linenos': [],
        'sel-line': 106L,
        'sel-line-start': 3598L,
        'selection_end': 3598L,
        'selection_start': 3598L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/PIL/Image.py'): {'a'\
        'ttrib-starts': [('open',
                          2516)],
        'first-line': 2542L,
        'folded-linenos': [],
        'sel-line': 2546L,
        'sel-line-start': 85673L,
        'selection_end': 85689L,
        'selection_start': 85689L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/comet_ml/connection.py'): {'a'\
        'ttrib-starts': [('WebSocketConnection',
                          344),
                         ('WebSocketConnection.wait_for_connection',
                          435)],
        'first-line': 433L,
        'folded-linenos': [],
        'sel-line': 452L,
        'sel-line-start': 13751L,
        'selection_end': 13751L,
        'selection_start': 13751L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/comet_ml/keras_logger.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 55L,
        'folded-linenos': [],
        'sel-line': 67L,
        'sel-line-start': 2236L,
        'selection_end': 2236L,
        'selection_start': 2236L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/bin/debug.py'): {'a'\
        'ttrib-starts': [('run',
                          157)],
        'first-line': 86L,
        'folded-linenos': [],
        'sel-line': 198L,
        'sel-line-start': 8432L,
        'selection_end': 8432L,
        'selection_start': 8432L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/callbacks/eval.py'): {'a'\
        'ttrib-starts': [('Evaluate',
                          21),
                         ('Evaluate.__init__',
                          25)],
        'first-line': 36L,
        'folded-linenos': [],
        'sel-line': 59L,
        'sel-line-start': 2482L,
        'selection_end': 2521L,
        'selection_start': 2504L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/models/retinanet.py'): {'a'\
        'ttrib-starts': [('retinanet_bbox',
                          301)],
        'first-line': 293L,
        'folded-linenos': [],
        'sel-line': 305L,
        'sel-line-start': 11391L,
        'selection_end': 11424L,
        'selection_start': 11391L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/preprocessing/generator.py'): {'a'\
        'ttrib-starts': [('Generator',
                          39),
                         ('Generator.compute_input_output',
                          272)],
        'first-line': 277L,
        'folded-linenos': [],
        'sel-line': 288L,
        'sel-line-start': 11641L,
        'selection_end': 11674L,
        'selection_start': 11674L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/preprocessing/onthefly.py'): {'a'\
        'ttrib-starts': [('OnTheFlyGenerator',
                          165),
                         ('OnTheFlyGenerator.__init__',
                          171)],
        'first-line': 52L,
        'folded-linenos': [],
        'sel-line': 209L,
        'sel-line-start': 6660L,
        'selection_end': 6660L,
        'selection_start': 6660L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/utils/anchors.py'): {'a'\
        'ttrib-starts': [('bbox_transform',
                          311)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 342L,
        'sel-line-start': 12824L,
        'selection_end': 12842L,
        'selection_start': 12842L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/utils/eval.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 15L,
        'folded-linenos': [],
        'sel-line': 20L,
        'sel-line-start': 657L,
        'selection_end': 693L,
        'selection_start': 693L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/utils/visualization.py'): {'a'\
        'ttrib-starts': [('draw_box',
                          32)],
        'first-line': 23L,
        'folded-linenos': [],
        'sel-line': 42L,
        'sel-line-start': 1269L,
        'selection_end': 1352L,
        'selection_start': 1352L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/numpy/core/_methods.py'): {'a'\
        'ttrib-starts': [('_mean',
                          52)],
        'first-line': 67L,
        'folded-linenos': [],
        'sel-line': 81L,
        'sel-line-start': 2635L,
        'selection_end': 2635L,
        'selection_start': 2635L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          100),
                         ('NDFrame.__getattr__',
                          4357)],
        'first-line': 4352L,
        'folded-linenos': [],
        'sel-line': 4371L,
        'sel-line-start': 149987L,
        'selection_end': 149987L,
        'selection_start': 149987L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/pandas/core/groupby/groupby.py'): {'a'\
        'ttrib-starts': [('_GroupBy',
                          562),
                         ('_GroupBy._set_result_index_ordered',
                          736)],
        'first-line': 745L,
        'folded-linenos': [],
        'sel-line': 751L,
        'sel-line-start': 24174L,
        'selection_end': 24174L,
        'selection_start': 24174L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/pandas/core/ops.py'): {'a'\
        'ttrib-starts': [('_comp_method_SERIES',
                          1125),
                         ('_comp_method_SERIES.wrapper',
                          1177)],
        'first-line': 1224L,
        'folded-linenos': [],
        'sel-line': 1249L,
        'sel-line-start': 37432L,
        'selection_end': 37482L,
        'selection_start': 37482L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/rasterio/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/requests/adapters.py'): {'a'\
        'ttrib-starts': [('HTTPAdapter',
                          81),
                         ('HTTPAdapter.send',
                          392)],
        'first-line': 507L,
        'folded-linenos': [],
        'sel-line': 512L,
        'sel-line-start': 20618L,
        'selection_end': 20618L,
        'selection_start': 20618L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/six.py'): {'a'\
        'ttrib-starts': [('reraise',
                          686)],
        'first-line': 668L,
        'folded-linenos': [],
        'sel-line': 692L,
        'sel-line-start': 24225L,
        'selection_end': 24225L,
        'selection_start': 24225L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/tensorflow/python/framework/errors_impl.py'): {'a'\
        'ttrib-starts': [('raise_exception_on_not_ok_status',
                          505),
                         ('raise_exception_on_not_ok_status.__exit__',
                          512)],
        'first-line': 504L,
        'folded-linenos': [],
        'sel-line': 521L,
        'sel-line-start': 17930L,
        'selection_end': 17942L,
        'selection_start': 17942L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/tensorflow/python/keras/_impl/keras/utils/np_utils.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 15L,
        'sel-line-start': 720L,
        'selection_end': 758L,
        'selection_start': 758L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/tensorflow/python/ops/functional_ops.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/yaml/scanner.py'): {'a'\
        'ttrib-starts': [('Scanner',
                          45),
                         ('Scanner.stale_possible_simple_keys',
                          275)],
        'first-line': 278L,
        'folded-linenos': [],
        'sel-line': 288L,
        'sel-line-start': 9408L,
        'selection_end': 9408L,
        'selection_start': 9408L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pangeo/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 554L,
        'selection_end': 563L,
        'selection_start': 563L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pangeo/lib/python3.6/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          97),
                         ('NDFrame._get_axis_number',
                          345)],
        'first-line': 339L,
        'folded-linenos': [],
        'sel-line': 356L,
        'sel-line-start': 12711L,
        'selection_end': 12711L,
        'selection_start': 12711L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pangeo/lib/python3.6/site-packages/pandas/core/indexing.py'): {'a'\
        'ttrib-starts': [('_LocIndexer',
                          1413),
                         ('_LocIndexer._has_valid_type',
                          1442)],
        'first-line': 1466L,
        'folded-linenos': [],
        'sel-line': 1476L,
        'sel-line-start': 52819L,
        'selection_end': 52888L,
        'selection_start': 52888L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pangeo/lib/python3.6/site-packages/pandas/core/series.py'): {'a'\
        'ttrib-starts': [('Series',
                          119),
                         ('Series.apply',
                          2425)],
        'first-line': 2515L,
        'folded-linenos': [],
        'sel-line': 2537L,
        'sel-line-start': 81854L,
        'selection_end': 81854L,
        'selection_start': 81854L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor_env/lib/python3.6/site-packages/plotly/offline/offline.py'): {'a'\
        'ttrib-starts': [('init_notebook_mode',
                          79)],
        'first-line': 89L,
        'folded-linenos': [],
        'sel-line': 106L,
        'sel-line-start': 3737L,
        'selection_end': 3737L,
        'selection_start': 3737L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor_env/lib/python3.6/site-packages/rasterio/__init__.py'): {'a'\
        'ttrib-starts': [('NullHandler',
                          18)],
        'first-line': 5L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 346L,
        'selection_end': 385L,
        'selection_start': 385L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/comet_ml/connection.py'): {'a'\
        'ttrib-starts': [('WebSocketConnection',
                          373),
                         ('WebSocketConnection.wait_for_connection',
                          466)],
        'first-line': 461L,
        'folded-linenos': [],
        'sel-line': 471L,
        'sel-line-start': 15080L,
        'selection_end': 15080L,
        'selection_start': 15080L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras/callbacks.py'): {'a'\
        'ttrib-starts': [('CallbackList',
                          28),
                         ('CallbackList.on_epoch_end',
                          67)],
        'first-line': 53L,
        'folded-linenos': [],
        'sel-line': 76L,
        'sel-line-start': 2084L,
        'selection_end': 2084L,
        'selection_start': 2084L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/callbacks/eval.py'): {'a'\
        'ttrib-starts': [('Evaluate',
                          20),
                         ('Evaluate.on_epoch_end',
                          52)],
        'first-line': 65L,
        'folded-linenos': [],
        'sel-line': 92L,
        'sel-line-start': 4052L,
        'selection_end': 4052L,
        'selection_start': 4052L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/preprocessing/generator.py'): {'a'\
        'ttrib-starts': [('Generator',
                          39),
                         ('Generator.generate_anchors',
                          250)],
        'first-line': 238L,
        'folded-linenos': [],
        'sel-line': 252L,
        'sel-line-start': 10137L,
        'selection_end': 10198L,
        'selection_start': 10192L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/preprocessing/onthefly.py'): {'a'\
        'ttrib-starts': [('OnTheFlyGenerator',
                          219),
                         ('OnTheFlyGenerator.__init__',
                          225)],
        'first-line': 253L,
        'folded-linenos': [],
        'sel-line': 270L,
        'sel-line-start': 9169L,
        'selection_end': 9208L,
        'selection_start': 9208L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/utils/anchors.py'): {'a'\
        'ttrib-starts': [('anchor_targets_bbox',
                          52)],
        'first-line': 75L,
        'folded-linenos': [],
        'sel-line': 98L,
        'sel-line-start': 4432L,
        'selection_end': 4443L,
        'selection_start': 4439L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/retinanet/lib/python3.6/site-packages/keras_retinanet/utils/eval.py'): {'a'\
        'ttrib-starts': [('_get_detections',
                          56)],
        'first-line': 82L,
        'folded-linenos': [],
        'sel-line': 108L,
        'sel-line-start': 4156L,
        'selection_end': 4156L,
        'selection_start': 4156L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        [u'PYTHONPATH=""'])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/retinanet/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.replace-history = [u'DeepForest_config',
                          u'anchor_config',
                          u'batch_size']
search.search-history = [u'seed',
                         u'set_seed',
                         u'train',
                         u'sample',
                         u'np',
                         u'numpy',
                         u'draw',
                         u'images',
                         u'Evaluate',
                         u'callback',
                         u'print',
                         u'site',
                         u'single_tile',
                         u'predict',
                         u'debug_subset',
                         u'Jaccard',
                         u'random',
                         u'config',
                         u'RedirectModel',
                         u'predict_tile']
testing.stored-results = (1,
                          [],
                          {})
