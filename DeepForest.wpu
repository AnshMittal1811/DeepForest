#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
debug.err-values = {loc('evaluate.py'): {},
                    loc('predict.py'): {},
                    loc('train.py'): {},
                    loc('train_fixed.py'): {},
                    loc('../keras-retinanet/keras_retinanet/preprocessing/onthefly.py'): {}}
debug.recent-run-args = {loc('eval.py'): [u'--score-threshold 0.9 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_18.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly snapshots/detection.csv snapshots/resnet50_onthefly_18.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly snapshots/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly snapshots/evaluation.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly data/training/evaluation.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.9 --save-path snapshots/images/ onthefly data/training/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.50 --save-path snapshots/images/ onthefly data/training/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.25 --save-path snapshots/images/ onthefly data/training/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.25 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_14.h5 --convert-model',
        u'--score-threshold 0.25 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_27.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_27.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_28.h5 --convert-model',
        u'--score-threshold 0.5 --save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_03.h5 --convert-model',
        u'--save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_03.h5 --convert-model',
        u'--save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_01.h5 --convert-model',
        u'--save-path snapshots/images/ onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_02.h5 --convert-model',
        u'onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_01.h5 --convert-model',
        u'--save-path snapshots/images onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_01.h5 --convert-model',
        u'--save-path snapshots/images onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_01.h5 ',
        u'onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_01.h5 --save-path snapshots/images',
        u'onthefly data/tmp/detection.csv snapshots/resnet50_onthefly_01.h5'],
                         loc('evaluate.py'): [u'--logdir=logs/20180524-065707',
        u'--logdir=20180524-065707'],
                         loc('predict.py'): [u'--logdir logs/20180524-065707',
        u'--logdir 20180524-065707',
        u'--logdir 20180521-085302']}
debug.remote-hosts = (4,
                      [{'agent-port': 0,
                        'basedir': u'',
                        'debug-port': 0,
                        'forward-x11': False,
                        'hostname': 'b.weinstein@dev1.ufhpc',
                        'id': 'Hipergator',
                        'io-encoding': None,
                        'pyexec': u'',
                        'shared': False,
                        'winghome': '/home/b.weinstein/wing/'}])
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'ZJTPJytlEesMIKzXs2TV5OeGs8'\
        'yol7dB',
        'size-state': '',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.1228070175438597,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          0],
        'notebook_display': 'normal',
        'notebook_percent': 0.49808429118773945,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'batch_size',
                                       'fReverse': False,
                                       'fSearchText': u'show',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': 9174,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': u'window',
                                       'fReverse': False,
                                       'fSearchText': u'origin',
                                       'fStartPos': 9168,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': True,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': True}}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {'tree-state': []}),
                     ('testing',
                      'wide',
                      0,
                      {}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 36432L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/ben/Documents/DeepForest/train.py': ["d"\
        "ata=preprocess.load_data(data_dir=config['bbox_data_dir'],nsamples="\
        "config[\"subsample\"])\n",
        'data.rgb_path\n',
        'data\n',
        'csv_data_file\n',
        'args\n'],
                                   u'file:/Users/ben/Documents/keras-retinanet/keras_retinanet/preprocessing/onthefly.py': ['s'\
        'um((tile_annotations.origin_ymin  > 3808) & (tile_annotations.origi'\
        'n_ymax  < 4058)& (tile_annotations.origin_xmin  > 6188) & (tile_ann'\
        'otations.origin_xmax  < 6438))\n',
        'boxes=((tile_annotations.origin_ymin  > 3808) &\n    (tile_annotati'\
        'ons.origin_ymax  < 4058)&\n    (tile_annotations.origin_xmin  > 618'\
        '8) & \n    (tile_annotations.origin_xmax  < 6438))\n\n',
        'tile_annotations[boxes]\n',
        'window_boxes.to_dict()\n',
        "fig,ax = pyplot.subplots(1)\nax.imshow(np.asarray(image[:,:,::-1]))"\
        "\n\nfor box in window_boxes.to_dict(\"index\"):            \n    bo"\
        "ttom_left=(box['origin_xmin'],box['origin_ymin'])\n    height=box['"\
        "origin_ymax']-box['origin_ymin']\n    width=box['origin_xmax']-box["\
        "'origin_xmin']\n    rect = patches.Rectangle(bottom_left,width,heig"\
        "ht,linewidth=1,edgecolor='r',facecolor='none')\n    ax.add_patch(re"\
        "ct)\npyplot.show()\n\n",
        'window\n',
        'windows_imaindex\n',
        'img=retrieve_window(image,index)\n',
        "img=retrieve_window(image,index)\n\nfig,ax = pyplot.subplots(1)\nax"\
        ".imshow(np.asarray(img[:,:,::-1]))\n\nfor box in window_boxes.to_di"\
        "ct(\"index\"):            \n    bottom_left=(box['origin_xmin'],box"\
        "['origin_ymin'])\n    height=box['origin_ymax']-box['origin_ymin']"\
        "\n    width=box['origin_xmax']-box['origin_xmin']\n    rect = patch"\
        "es.Rectangle(bottom_left,width,height,linewidth=1,edgecolor='r',fac"\
        "ecolor='none')\n    ax.add_patch(rect)\npyplot.show()\n\n",
        'img=retrieve_window(image,index)\n\nfig,ax = pyplot.subplots(1)\nax'\
        '.imshow(img)\n\n',
        'window_boxes.to_dict("index")\n',
        'window_boxes.to_list\n',
        "img=retrieve_window(image,index)\n\nfig,ax = pyplot.subplots(1)\nax"\
        ".imshow(img)\n\nfor index,box in window_boxes.:            \n    bo"\
        "ttom_left=(box['origin_xmin'],box['origin_ymin'])\n    height=box['"\
        "origin_ymax']-box['origin_ymin']\n    width=box['origin_xmax']-box["\
        "'origin_xmin']\n    rect = patches.Rectangle(bottom_left,width,heig"\
        "ht,linewidth=1,edgecolor='r',facecolor='none')\n    ax.add_patch(re"\
        "ct)\npyplot.show()\n\n",
        "img=retrieve_window(image,index)\n\nfig,ax = pyplot.subplots(1)\nax"\
        ".imshow(img)\n\nfor index,box in window_boxes:            \n    bot"\
        "tom_left=(box['origin_xmin'],box['origin_ymin'])\n    height=box['o"\
        "rigin_ymax']-box['origin_ymin']\n    width=box['origin_xmax']-box['"\
        "origin_xmin']\n    rect = patches.Rectangle(bottom_left,width,heigh"\
        "t,linewidth=1,edgecolor='r',facecolor='none')\n    ax.add_patch(rec"\
        "t)\npyplot.show()\n\n",
        "img=retrieve_window(image,index)\n\nfig,ax = pyplot.subplots(1)\nax"\
        ".imshow(img)\n\nfor index,box in window_boxes.iterrows():          "\
        "  \n    bottom_left=(box['origin_xmin'],box['origin_ymin'])\n    he"\
        "ight=box['origin_ymax']-box['origin_ymin']\n    width=box['origin_x"\
        "max']-box['origin_xmin']\n    rect = patches.Rectangle(bottom_left,"\
        "width,height,linewidth=1,edgecolor='r',facecolor='none')\n    ax.ad"\
        "d_patch(rect)\npyplot.show()\n\n",
        'box\n',
        'bottom_left\n',
        '5308    5382  407797.00     ...            2385.3       2474.8\n',
        '#construct box\nbox_coords={}\n\n#top left\nbox_coords["x1"]=row["o'\
        'rigin_xmin"]\nbox_coords["y1"]=row["origin_ymin"]\n\n#Bottom right'\
        '\nbox_coords["x2"]=row["origin_xmax"]\nbox_coords["y2"]=row["origin'\
        '_ymax"]\n\n',
        'overlapping_annotations=[]\n\n#for each overlapping box, check if a'\
        'nnotations overlap by more than 50% with crop.\nfor index,row in ti'\
        'le_annotations.iterrows():\n    \n    #construct box\n    box_coord'\
        's={}\n    \n    #top left\n    box_coords["x1"]=row["origin_xmin"]'\
        '\n    box_coords["y1"]=row["origin_ymin"]\n    \n    #Bottom right'\
        '\n    box_coords["x2"]=row["origin_xmax"]\n    box_coords["y2"]=row'\
        '["origin_ymax"]     \n    \n    overlap=box_overlap(window_coords, '\
        'box_coords)\n    if overlap > 0.0:\n        print(overlap)\n       '\
        ' \n        overlapping_annotations.append(row)\n\n',
        '#for each overlapping box, check if annotations overlap by more tha'\
        'n 50% with crop.\nfor index,row in tile_annotations.iterrows():\n  '\
        '  \n    #construct box\n    box_coords={}\n    \n    #top left\n   '\
        ' box_coords["x1"]=row["origin_xmin"]\n    box_coords["y1"]=row["ori'\
        'gin_ymin"]\n    \n    #Bottom right\n    box_coords["x2"]=row["orig'\
        'in_xmax"]\n    box_coords["y2"]=row["origin_ymax"]     \n    \n    '\
        'overlap=box_overlap(window_coords, box_coords)\n    if overlap > 0.'\
        '5:\n        print(overlap)\n        \n        overlapping_annotatio'\
        'ns.append(row)\n\n',
        '#Filter annotations in the selected tile\ntile_annotations=annotati'\
        'ons[annotations["rgb_path"]==image.split("/")[-1]]\n\n#Get image cr'\
        'op\nwindows=compute_windows(image)\n\n#Find index of crop and creat'\
        'e coordinate box\nx,y,w,h=windows[index].getRect()\n\nwindow_coords'\
        '={}\n#top left\nwindow_coords["x1"]=x\nwindow_coords["y1"]=y\n\n#Bo'\
        'ttom right\nwindow_coords["x2"]=x+w    \nwindow_coords["y2"]=y+h   '\
        ' \n\n#Which box overlap\nboxes=((tile_annotations.origin_ymin  > wi'\
        'ndow_coords["y1"]) &\n    (tile_annotations.origin_ymax  < window_c'\
        'oords["y2"])&\n    (tile_annotations.origin_xmin  > window_coords["'\
        'x1"]) & \n    (tile_annotations.origin_xmax  < window_coords["x2"])'\
        ')\n\nwindow_boxes=tile_annotations[boxes]\n\noverlapping_annotation'\
        's=[]\n\n#for each overlapping box, check if annotations overlap by '\
        'more than 50% with crop.\nfor index,row in tile_annotations.iterrow'\
        's():\n    \n    #construct box\n    box_coords={}\n    \n    #top l'\
        'eft\n    box_coords["x1"]=row["origin_xmin"]\n    box_coords["y1"]='\
        'row["origin_ymin"]\n    \n    #Bottom right\n    box_coords["x2"]=r'\
        'ow["origin_xmax"]\n    box_coords["y2"]=row["origin_ymax"]     \n  '\
        '  \n    overlap=box_overlap(window_coords, box_coords)\n    if over'\
        'lap > 0.5:\n        \n        overlapping_annotations.append(row)\n'\
        '\n\n',
        'llen(overlapping_annotations)\n',
        'overlapping_annotations[1]\n',
        'overlapping_annotations[3]\n',
        'tile_annotations.shape\n',
        'tile_annotations=annotations[annotations["rgb_path"]==image.split("'\
        '/")[-1]]\n',
        'windows=compute_windows(image)\n',
        'indedx\n',
        'index=0\n',
        'x,y,w,h=windows[index].getRect()\n',
        'window_coords={}\n #top left\n window_coords["x1"]=x\n window_coord'\
        's["y1"]=y\n \n #Bottom right\n window_coords["x2"]=x+w    \n window'\
        '_coords["y2"]=y+h\n\n',
        'boxes=((tile_annotations.origin_ymin  > window_coords["y1"]) &\n   '\
        ' (tile_annotations.origin_ymax  < window_coords["y2"])&\n    (tile_'\
        'annotations.origin_xmin  > window_coords["x1"]) & \n    (tile_annot'\
        'ations.origin_xmax  < window_coords["x2"]))\n\n',
        'window_boxes=tile_annotations[boxes]\n',
        'v\n',
        'overlapping_annotations=[]\n',
        '#for each overlapping box, check if annotations overlap by more tha'\
        'n 50% with crop.\nfor index,row in window_boxes.iterrows():\n    \n'\
        '    #construct box\n    box_coords={}\n    \n    #top left\n    box'\
        '_coords["x1"]=row["origin_xmin"]\n    box_coords["y1"]=row["origin_'\
        'ymin"]\n    \n    #Bottom right\n    box_coords["x2"]=row["origin_x'\
        'max"]\n    box_coords["y2"]=row["origin_ymax"]     \n    \n    over'\
        'lap=box_overlap(window_coords, box_coords)\n    if overlap > 0.5:\n'\
        '        \n        overlapping_annotations.append(row)\n\n',
        'overlapping_annotations.shape\n',
        'len(overlapping_annotations)\n',
        'window_boxes.shape\n',
        'window_boxes.index\n',
        'window_boxes.index()\n',
        'window_boxes.index.value\n',
        'window_boxes.index.values\n',
        'overlapping_annotations[0]\n',
        'overlap=box_overlap(window_coords, box_coords)\n',
        'overlap\n',
        'row.index\n',
        'row.index.value\n',
        'row.index.values\n',
        'row.treeID\n',
        'index\n',
        'index=3\n',
        '#Filter annotations in the selected tile\ntile_annotations=annotati'\
        'ons[annotations["rgb_path"]==image.split("/")[-1]]\n\n#Get image cr'\
        'op\nwindows=compute_windows(image)\n\n#Find index of crop and creat'\
        'e coordinate box\nx,y,w,h=windows[index].getRect()\n\nwindow_coords'\
        '={}\n#top left\nwindow_coords["x1"]=x\nwindow_coords["y1"]=y\n\n#Bo'\
        'ttom right\nwindow_coords["x2"]=x+w    \nwindow_coords["y2"]=y+h   '\
        ' \n\n#Which box overlap\nboxes=((tile_annotations.origin_ymin  > wi'\
        'ndow_coords["y1"]) &\n    (tile_annotations.origin_ymax  < window_c'\
        'oords["y2"])&\n    (tile_annotations.origin_xmin  > window_coords["'\
        'x1"]) & \n    (tile_annotations.origin_xmax  < window_coords["x2"])'\
        ')\n\nwindow_boxes=tile_annotations[boxes]\n\noverlapping_annotation'\
        's=[]\n\n',
        '#for each overlapping box, check if annotations overlap by more tha'\
        'n 50% with crop.\nfor index,row in window_boxes.iterrows():\n    \n'\
        '    #construct box\n    box_coords={}\n    \n    #top left\n    box'\
        '_coords["x1"]=row["origin_xmin"]\n    box_coords["y1"]=row["origin_'\
        'ymin"]\n    \n    #Bottom right\n    box_coords["x2"]=row["origin_x'\
        'max"]\n    box_coords["y2"]=row["origin_ymax"]     \n    \n    over'\
        'lap=box_overlap(window_coords, box_coords)\n    if overlap > 0.5:\n'\
        '        \n        overlapping_annotations.append(row.treeID)\n\n',
        'window_boxes[window_boxes.treeID==overlapping_annotations]\n',
        'window_boxes=fetch_annotations(image=self.base_dir+row["image"], in'\
        'dex=row["windows"],annotations=self.annotation_list)\n',
        'box_coords\n',
        'window_coords\n',
        'box_coords-window_coords\n',
        'boxes=window_boxes[["window_xmin","window_ymin","window_xmax","wind'\
        'ow_ymax","label_numeric"]]\n',
        'window_boxes\n',
        'window_boxes["treeID"]\n',
        'window_boxes[["treeID","xmin"]]\n',
        'boxes=window_boxes[["window_xmin","window_ymin","window_xmax","wind'\
        'ow_ymax"]]\n',
        'boxes=window_boxes[["window_xmin","window_ymin"]]\n',
        'boxes=window_boxes[["window_xmin"]]\n',
        'window_boxes.columns\n',
        'boxes=window_boxes[["window_xmin","window_ymin","window_xmax","wind'\
        'ow_ymax","numeric_label"]]\n',
        'boxes\n',
        'box.to_matrix\n',
        'boxes.to_matrix()\n',
        'boxes.as_matrix()\n',
        'self.classes\n',
        'boxes=window_boxes[["window_xmin","window_ymin","window_xmax","wind'\
        'ow_ymax","numeric_label"]].as_matrix()\n',
        'boxes[],5\n',
        'boxes[,5]\n',
        'boxes[:,5]\n',
        'boxes[:,4]\n',
        'self.image\n',
        'image\n',
        'self.\n',
        'image_name\n',
        'image=self.base_dir + row["rgb_dir"]\n',
        'row\n',
        'image=self.base_dir + row["image"]\n',
        'index=row["windows"]\n',
        "img=retrieve_window(image,index)\n\nfig,ax = pyplot.subplots(1)\nax"\
        ".imshow(img)\n\nfor index,box in boxes.iterrows():            \n   "\
        " bottom_left=(box['window_xmin'],box['window_ymin'])\n    height=bo"\
        "x['window_ymax']-box['window_ymin']\n    width=box['window_xmax']-b"\
        "ox['window_xmin']\n    rect = patches.Rectangle(bottom_left,width,h"\
        "eight,linewidth=1,edgecolor='r',facecolor='none')\n    ax.add_patch"\
        "(rect)\npyplot.show()\n\n",
        "#Show crop and image\nimg=retrieve_window(image,index)\n\nfig,ax = "\
        "pyplot.subplots(1)\nax.imshow(img)\n\nfor index,box in window_boxes"\
        ".iterrows():            \n    bottom_left=(box['window_xmin'],box['"\
        "window_ymin'])\n    height=box['window_ymax']-box['window_ymin']\n"\
        "    width=box['window_xmax']-box['window_xmin']\n    rect = patches"\
        ".Rectangle(bottom_left,width,height,linewidth=1,edgecolor='r',facec"\
        "olor='none')\n    ax.add_patch(rect)\npyplot.show()\n\n",
        'tile_annotations\n',
        'ile_annotations.treeID==overlapping_annotations\n',
        'tile_annotations.treeID==overlapping_annotations\n',
        'tile_annotations.treeID\n',
        'tile_annotations.treeID in overlapping_annotations\n',
        'tile_annotations.treeID \n',
        'overlapping_annotations\n',
        'type(tile_annotations.treeID)\n',
        'type(tile_annotations.treeID.values)\n',
        'overlapping_boxes=tile_annotations[tile_annotations.treeID.isin(ove'\
        'rlapping_annotations)]\n',
        'overlapping_boxes\n']},
                       'launch-id': None,
                       'sel-line': 36449L,
                       'sel-line-start': 1314588L,
                       'selection_end': 1314588L,
                       'selection_start': 1314588L,
                       'zoom': 0L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 0L,
                       'folded-linenos': [],
                       'history': {},
                       'launch-id': None,
                       'sel-line': 3L,
                       'sel-line-start': 195L,
                       'selection_end': 195L,
                       'selection_start': 195L,
                       'zoom': 0L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('train.py'),
        {'attrib-starts': [],
         'first-line': 461L,
         'folded-linenos': [56L,
                            67L,
                            75L,
                            130L,
                            203L,
                            266L,
                            305L],
         'sel-line': 447L,
         'sel-line-start': 17916L,
         'selection_end': 18009L,
         'selection_start': 17916L,
         'zoom': 0L},
        1530917331.444638],
        [loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/PIL/Image.py'),
         {'attrib-starts': [('open',
                             2516)],
          'first-line': 2573L,
          'folded-linenos': [],
          'sel-line': 2589L,
          'sel-line-start': 86876L,
          'selection_end': 86876L,
          'selection_start': 86876L,
          'zoom': 0L},
         1530917336.474108],
        [loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/preprocessing/onthefly.py'),
         {'attrib-starts': [('_read_annotations',
                             50)],
          'first-line': 42L,
          'folded-linenos': [],
          'sel-line': 56L,
          'sel-line-start': 1579L,
          'selection_end': 1583L,
          'selection_start': 1583L,
          'zoom': 0L},
         1530917357.863176],
        [loc('_config_debug.yml'),
         {'attrib-starts': [],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 23L,
          'sel-line-start': 379L,
          'selection_end': 397L,
          'selection_start': 397L,
          'zoom': 0L},
         1530917371.531012],
        [loc('train.py'),
         {'attrib-starts': [],
          'first-line': 442L,
          'folded-linenos': [56L,
                             67L,
                             75L,
                             130L,
                             203L,
                             266L,
                             305L],
          'sel-line': 447L,
          'sel-line-start': 17916L,
          'selection_end': 18008L,
          'selection_start': 18008L,
          'zoom': 0L},
         1530917382.26899],
        [loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/pandas/io/parsers.py'),
         {'attrib-starts': [('_make_parser_function',
                             537),
                            ('_make_parser_function.parser_f',
                             541)],
          'first-line': 672L,
          'folded-linenos': [],
          'sel-line': 677L,
          'sel-line-start': 26570L,
          'selection_end': 26570L,
          'selection_start': 26570L,
          'zoom': 0L},
         1530917385.237894],
        [loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/preprocessing/onthefly.py'),
         {'attrib-starts': [('OnTheFlyGenerator',
                             221),
                            ('OnTheFlyGenerator.__init__',
                             227)],
          'first-line': 248L,
          'folded-linenos': [],
          'sel-line': 253L,
          'sel-line-start': 8125L,
          'selection_end': 8125L,
          'selection_start': 8125L,
          'zoom': 0L},
         1530917386.630412],
        [loc('train.py'),
         {'attrib-starts': [('parse_args',
                             297)],
          'first-line': 463L,
          'folded-linenos': [56L,
                             67L,
                             75L,
                             130L,
                             266L,
                             305L],
          'sel-line': 312L,
          'sel-line-start': 11441L,
          'selection_end': 11497L,
          'selection_start': 11497L,
          'zoom': 0L},
         1530917448.694571],
        [loc('_config_debug.yml'),
         {'attrib-starts': [],
          'first-line': 5L,
          'folded-linenos': [],
          'sel-line': 23L,
          'sel-line-start': 379L,
          'selection_end': 397L,
          'selection_start': 397L,
          'zoom': 0L},
         1530917455.106119],
        [loc('train.py'),
         {'attrib-starts': [],
          'first-line': 464L,
          'folded-linenos': [56L,
                             67L,
                             75L,
                             130L,
                             266L,
                             305L],
          'sel-line': 473L,
          'sel-line-start': 18822L,
          'selection_end': 18873L,
          'selection_start': 18846L,
          'zoom': 0L},
         1530917461.943907],
        [loc('_config.yml'),
         {'attrib-starts': [],
          'first-line': 12L,
          'folded-linenos': [],
          'sel-line': 29L,
          'sel-line-start': 726L,
          'selection_end': 789L,
          'selection_start': 726L,
          'zoom': 0L},
         1530917464.289347],
        [loc('_config_debug.yml'),
         {'attrib-starts': [],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 25L,
          'sel-line-start': 408L,
          'selection_end': 452L,
          'selection_start': 452L,
          'zoom': 0L},
         1530917582.525748],
        [loc('../../miniconda3/envs/DeepForest/lib/python3.6/posixpath.py'),
         {'attrib-starts': [('split',
                             103)],
          'first-line': 89L,
          'folded-linenos': [],
          'sel-line': 106L,
          'sel-line-start': 3598L,
          'selection_end': 3598L,
          'selection_start': 3598L,
          'zoom': 0L},
         1530917588.232831],
        [loc('train.py'),
         {'attrib-starts': [],
          'first-line': 470L,
          'folded-linenos': [67L,
                             75L,
                             266L,
                             305L],
          'sel-line': 482L,
          'sel-line-start': 19111L,
          'selection_end': 19119L,
          'selection_start': 19119L,
          'zoom': 0L},
         1530917747.651491],
        [loc('../../miniconda3/envs/DeepForest/lib/python3.6/posixpath.py'),
         {'attrib-starts': [('split',
                             103)],
          'first-line': 96L,
          'folded-linenos': [],
          'sel-line': 106L,
          'sel-line-start': 3598L,
          'selection_end': 3598L,
          'selection_start': 3598L,
          'zoom': 0L},
         1530917752.248828],
        [loc('train.py'),
         {'attrib-starts': [],
          'first-line': 474L,
          'folded-linenos': [67L,
                             75L,
                             266L,
                             305L],
          'sel-line': 489L,
          'sel-line-start': 19301L,
          'selection_end': 19301L,
          'selection_start': 19301L,
          'zoom': 0L},
         1530917757.75931],
        [loc('_config_debug.yml'),
         {'attrib-starts': [],
          'first-line': 10L,
          'folded-linenos': [],
          'sel-line': 25L,
          'sel-line-start': 408L,
          'selection_end': 452L,
          'selection_start': 452L,
          'zoom': 0L},
         1530917761.411054],
        [loc('../keras-retinanet/keras_retinanet/utils/visualization.py'),
         {'attrib-starts': [('draw_caption',
                             35)],
          'first-line': 28L,
          'folded-linenos': [],
          'sel-line': 41L,
          'sel-line-start': 1302L,
          'selection_end': 1352L,
          'selection_start': 1352L,
          'zoom': 0L},
         1530917762.607113],
        [loc('DeepForest/sliding_window.py'),
         {'attrib-starts': [('load',
                             14)],
          'first-line': 15L,
          'folded-linenos': [],
          'sel-line': 32L,
          'sel-line-start': 993L,
          'selection_end': 1025L,
          'selection_start': 1003L,
          'zoom': 0L},
         1530917763.552445],
        [loc('../keras-retinanet/keras_retinanet/preprocessing/onthefly.py'),
         {'attrib-starts': [('fetch_annotations',
                             145)],
          'first-line': 346L,
          'folded-linenos': [],
          'sel-line': 171L,
          'sel-line-start': 5304L,
          'selection_end': 5308L,
          'selection_start': 5308L,
          'zoom': 0L},
         1530917765.415078]],
        20),
        'current-loc': loc('train.py'),
        'editor-state-list': [(loc('eval.py'),
                               {'attrib-starts': [('parse_args',
        84)],
                                'first-line': 160L,
                                'folded-linenos': [],
                                'sel-line': 105L,
                                'sel-line-start': 3952L,
                                'selection_end': 3998L,
                                'selection_start': 3998L,
                                'zoom': 0L}),
                              (loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/pandas/core/generic.py'),
                               {'attrib-starts': [('NDFrame',
        100),
        ('NDFrame.__nonzero__',
         1569)],
                                'first-line': 1567L,
                                'folded-linenos': [],
                                'sel-line': 1572L,
                                'sel-line-start': 51097L,
                                'selection_end': 51097L,
                                'selection_start': 51097L,
                                'zoom': 0L}),
                              (loc('../keras-retinanet/keras_retinanet/preprocessing/onthefly.py'),
                               {'attrib-starts': [('fetch_annotations',
        145)],
                                'first-line': 346L,
                                'folded-linenos': [],
                                'sel-line': 171L,
                                'sel-line-start': 5304L,
                                'selection_end': 5308L,
                                'selection_start': 5308L,
                                'zoom': 0L}),
                              (loc('../keras-retinanet/keras_retinanet/models/resnet.py'),
                               {'attrib-starts': [('resnet_retinanet',
        77)],
                                'first-line': 71L,
                                'folded-linenos': [],
                                'sel-line': 89L,
                                'sel-line-start': 3261L,
                                'selection_end': 3287L,
                                'selection_start': 3282L,
                                'zoom': 0L}),
                              (loc('DeepForest/sliding_window.py'),
                               {'attrib-starts': [('load',
        14)],
                                'first-line': 15L,
                                'folded-linenos': [],
                                'sel-line': 32L,
                                'sel-line-start': 993L,
                                'selection_end': 1025L,
                                'selection_start': 1003L,
                                'zoom': 0L}),
                              (loc('train.py'),
                               {'attrib-starts': [],
                                'first-line': 458L,
                                'folded-linenos': [67L,
        75L,
        266L,
        305L],
                                'sel-line': 464L,
                                'sel-line-start': 18501L,
                                'selection_end': 18527L,
                                'selection_start': 18527L,
                                'zoom': 0L}),
                              (loc('../keras-retinanet/keras_retinanet/utils/visualization.py'),
                               {'attrib-starts': [('draw_caption',
        35)],
                                'first-line': 28L,
                                'folded-linenos': [],
                                'sel-line': 41L,
                                'sel-line-start': 1302L,
                                'selection_end': 1352L,
                                'selection_start': 1352L,
                                'zoom': 0L}),
                              (loc('_config.yml'),
                               {'attrib-starts': [],
                                'first-line': 12L,
                                'folded-linenos': [],
                                'sel-line': 29L,
                                'sel-line-start': 726L,
                                'selection_end': 789L,
                                'selection_start': 726L,
                                'zoom': 0L}),
                              (loc('_config_debug.yml'),
                               {'attrib-starts': [],
                                'first-line': 10L,
                                'folded-linenos': [],
                                'sel-line': 25L,
                                'sel-line-start': 408L,
                                'selection_end': 452L,
                                'selection_start': 452L,
                                'zoom': 0L})],
        'has-focus': False,
        'locked': False},
        [loc('eval.py'),
         loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/pandas/core/generic.py'),
         loc('../keras-retinanet/keras_retinanet/preprocessing/onthefly.py'),
         loc('../keras-retinanet/keras_retinanet/models/resnet.py'),
         loc('DeepForest/sliding_window.py'),
         loc('train.py'),
         loc('../keras-retinanet/keras_retinanet/utils/visualization.py'),
         loc('_config.yml'),
         loc('_config_debug.yml')]),
                               'open_files': [u'eval.py',
        u'../keras-retinanet/keras_retinanet/models/resnet.py',
        u'../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/pandas/core/generic.py',
        u'_config.yml',
        u'_config_debug.yml',
        u'../keras-retinanet/keras_retinanet/utils/visualization.py',
        u'DeepForest/sliding_window.py',
        u'../keras-retinanet/keras_retinanet/preprocessing/onthefly.py',
        u'train.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.2341110217216412},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (0,
                         23,
                         1432,
                         877)}]}
guimgr.recent-documents = [loc('train.py'),
                           loc('../keras-retinanet/keras_retinanet/preprocessing/onthefly.py'),
                           loc('DeepForest/sliding_window.py'),
                           loc('../keras-retinanet/keras_retinanet/utils/visualization.py'),
                           loc('_config_debug.yml'),
                           loc('_config.yml'),
                           loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/pandas/core/generic.py'),
                           loc('../keras-retinanet/keras_retinanet/models/resnet.py'),
                           loc('eval.py')]
guimgr.visual-state = {loc('DeepForest/CropGenerator.py'): {'attrib-starts': [('d'\
        'ata2geojson',
        113)],
        'first-line': 2L,
        'folded-linenos': [],
        'sel-line': 114L,
        'sel-line-start': 3378L,
        'selection_end': 3385L,
        'selection_start': 3385L,
        'zoom': 0L},
                       loc('DeepForest/Lidar.py'): {'attrib-starts': [('Lida'\
        'r',
        2),
        ('Lidar.plot',
         6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 169L,
        'selection_end': 177L,
        'selection_start': 177L,
        'zoom': 0L},
                       loc('DeepForest/README.md'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepForest/RGB.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepForest/config.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 14L,
        'sel-line-start': 494L,
        'selection_end': 494L,
        'selection_start': 494L,
        'zoom': 0L},
                       loc('DeepForest/dask_utils.py'): {'attrib-starts': [('s'\
        'tart_dask',
        4)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 126L,
        'selection_end': 130L,
        'selection_start': 130L,
        'zoom': 0L},
                       loc('DeepForest/pointcloud.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepForest/tools.py'): {'attrib-starts': [],
        'first-line': 14L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 712L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('DeepForest/untitled-2.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('HPC/submit_cpu_job.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 646L,
        'selection_end': 652L,
        'selection_start': 652L,
        'zoom': 0L},
                       loc('HPC/submit_eval.sh'): {'attrib-starts': [],
        'first-line': 10L,
        'folded-linenos': [],
        'sel-line': 19L,
        'sel-line-start': 729L,
        'selection_end': 767L,
        'selection_start': 767L,
        'zoom': 0L},
                       loc('HPC/submit_job.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 230L,
        'selection_end': 267L,
        'selection_start': 267L,
        'zoom': 0L},
                       loc('README.md'): {'attrib-starts': [],
        'first-line': 26L,
        'folded-linenos': [],
        'sel-line': 42L,
        'sel-line-start': 1588L,
        'selection_end': 1588L,
        'selection_start': 1588L,
        'zoom': 0L},
                       loc('RGB.py'): {'attrib-starts': [],
                                       'first-line': 0L,
                                       'folded-linenos': [],
                                       'sel-line': 0L,
                                       'sel-line-start': 0L,
                                       'selection_end': 0L,
                                       'selection_start': 0L,
                                       'zoom': 0L},
                       loc('_config.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 10L,
        'sel-line-start': 335L,
        'selection_end': 335L,
        'selection_start': 335L,
        'zoom': 0L},
                       loc('_config_debug.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 168L,
        'selection_end': 188L,
        'selection_start': 168L,
        'zoom': 0L},
                       loc('config.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('debug.py'): {'attrib-starts': [('parse_args',
        117)],
        'first-line': 178L,
        'folded-linenos': [],
        'sel-line': 161L,
        'sel-line-start': 7130L,
        'selection_end': 7154L,
        'selection_start': 7154L,
        'zoom': 0L},
                       loc('environment.yml'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('eval.py'): {'attrib-starts': [('parse_args',
        84)],
        'first-line': 141L,
        'folded-linenos': [],
        'sel-line': 105L,
        'sel-line-start': 3952L,
        'selection_end': 3998L,
        'selection_start': 3998L,
        'zoom': 0L},
                       loc('install_dependencies.sh'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 251L,
        'selection_end': 251L,
        'selection_start': 251L,
        'zoom': 0L},
                       loc('models/inception.py'): {'attrib-starts': [('get_'\
        'model',
        4)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 9L,
        'sel-line-start': 197L,
        'selection_end': 245L,
        'selection_start': 245L,
        'zoom': 0L},
                       loc('models/rgb.py'): {'attrib-starts': [('get_model',
        6)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 8L,
        'sel-line-start': 141L,
        'selection_end': 221L,
        'selection_start': 221L,
        'zoom': 0L},
                       loc('predict.py'): {'attrib-starts': [('view_predicti'\
        'ons',
        38)],
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 41L,
        'sel-line-start': 1071L,
        'selection_end': 1075L,
        'selection_start': 1075L,
        'zoom': 0L},
                       loc('tests/__init__.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('tests/test_Lidar.py'): {'attrib-starts': [('test'\
        '_Lidar',
        2)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 5L,
        'sel-line-start': 207L,
        'selection_end': 207L,
        'selection_start': 207L,
        'zoom': 0L},
                       loc('train.py'): {'attrib-starts': [],
        'first-line': 464L,
        'folded-linenos': [],
        'sel-line': 470L,
        'sel-line-start': 18734L,
        'selection_end': 18734L,
        'selection_start': 18734L,
        'zoom': 0L},
                       loc('train_retinanet.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../DeepMeerkat/training/Classification/GenerateBoxes_new.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/eval_test.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 17L,
        'folded-linenos': [],
        'sel-line': 29L,
        'sel-line-start': 946L,
        'selection_end': 975L,
        'selection_start': 975L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/evaluate.py'): {'a'\
        'ttrib-starts': [('main',
                          114)],
        'first-line': 137L,
        'folded-linenos': [],
        'sel-line': 151L,
        'sel-line-start': 5982L,
        'selection_end': 5999L,
        'selection_start': 5999L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/bin/train.py'): {'a'\
        'ttrib-starts': [('parse_args',
                          368)],
        'first-line': 244L,
        'folded-linenos': [],
        'sel-line': 416L,
        'sel-line-start': 16696L,
        'selection_end': 16766L,
        'selection_start': 16766L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/preprocessing/generator.py'): {'a'\
        'ttrib-starts': [('Generator',
                          39),
                         ('Generator.__init__',
                          43)],
        'first-line': 64L,
        'folded-linenos': [],
        'sel-line': 53L,
        'sel-line-start': 1371L,
        'selection_end': 1402L,
        'selection_start': 1402L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/preprocessing/onthefly.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 242L,
        'folded-linenos': [],
        'sel-line': 251L,
        'sel-line-start': 7991L,
        'selection_end': 8004L,
        'selection_start': 8004L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/colors.py'): {'a'\
        'ttrib-starts': [('label_color',
                          3)],
        'first-line': 91L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 436L,
        'selection_end': 484L,
        'selection_start': 484L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/eval.py'): {'a'\
        'ttrib-starts': [('_get_detections',
                          56)],
        'first-line': 57L,
        'folded-linenos': [],
        'sel-line': 82L,
        'sel-line-start': 2985L,
        'selection_end': 2985L,
        'selection_start': 2985L,
        'zoom': 0L},
                       loc('../keras-retinanet/keras_retinanet/utils/visualization.py'): {'a'\
        'ttrib-starts': [('draw_caption',
                          35)],
        'first-line': 28L,
        'folded-linenos': [],
        'sel-line': 45L,
        'sel-line-start': 1493L,
        'selection_end': 1588L,
        'selection_start': 1588L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/cloud.py'): {'attrib-starts': [('C'\
        'loud',
        41),
        ('Cloud.filter_z',
         152)],
        'first-line': 148L,
        'folded-linenos': [],
        'sel-line': 162L,
        'sel-line-start': 5941L,
        'selection_end': 5991L,
        'selection_start': 5991L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/metrics2.py'): {'attrib-starts': [('m'\
        'ode',
        12)],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 17L,
        'sel-line-start': 477L,
        'selection_end': 480L,
        'selection_start': 480L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/pointcloud2.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/rasterizer.py'): {'attrib-starts': [('G'\
        'rid',
        7),
        ('Grid.__init__',
         14)],
        'first-line': 4L,
        'folded-linenos': [],
        'sel-line': 21L,
        'sel-line-start': 827L,
        'selection_end': 838L,
        'selection_start': 838L,
        'zoom': 0L},
                       loc('../pyfor/pyfor/test.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 13L,
        'sel-line-start': 250L,
        'selection_end': 286L,
        'selection_start': 286L,
        'zoom': 0L},
                       loc('../train.py'): {'attrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../Downloads/Miniconda3-latest-MacOSX-x86_64.sh'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/comet_ml/keras_logger.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 55L,
        'folded-linenos': [],
        'sel-line': 67L,
        'sel-line-start': 2236L,
        'selection_end': 2236L,
        'selection_start': 2236L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/bin/debug.py'): {'a'\
        'ttrib-starts': [('run',
                          157)],
        'first-line': 86L,
        'folded-linenos': [],
        'sel-line': 198L,
        'sel-line-start': 8432L,
        'selection_end': 8432L,
        'selection_start': 8432L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/preprocessing/generator.py'): {'a'\
        'ttrib-starts': [('Generator',
                          39),
                         ('Generator.load_annotations_group',
                          121)],
        'first-line': 119L,
        'folded-linenos': [],
        'sel-line': 124L,
        'sel-line-start': 4607L,
        'selection_end': 4607L,
        'selection_start': 4607L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/preprocessing/onthefly.py'): {'a'\
        'ttrib-starts': [('OnTheFlyGenerator',
                          100),
                         ('OnTheFlyGenerator.num_classes',
                          169)],
        'first-line': 166L,
        'folded-linenos': [],
        'sel-line': 170L,
        'sel-line-start': 5426L,
        'selection_end': 5460L,
        'selection_start': 5460L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/utils/eval.py'): {'a'\
        'ttrib-starts': [('_get_detections',
                          56)],
        'first-line': 72L,
        'folded-linenos': [],
        'sel-line': 81L,
        'sel-line-start': 2927L,
        'selection_end': 2988L,
        'selection_start': 2988L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/keras_retinanet/utils/visualization.py'): {'a'\
        'ttrib-starts': [('draw_caption',
                          35)],
        'first-line': 32L,
        'folded-linenos': [],
        'sel-line': 44L,
        'sel-line-start': 1400L,
        'selection_end': 1490L,
        'selection_start': 1490L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/rasterio/__init__.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/requests/adapters.py'): {'a'\
        'ttrib-starts': [('HTTPAdapter',
                          80),
                         ('HTTPAdapter.send',
                          387)],
        'first-line': 502L,
        'folded-linenos': [],
        'sel-line': 520L,
        'sel-line-start': 20691L,
        'selection_end': 20691L,
        'selection_start': 20691L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/DeepForest/lib/python3.6/site-packages/tensorflow/python/ops/functional_ops.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 0L,
        'sel-line-start': 0L,
        'selection_end': 0L,
        'selection_start': 0L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pangeo/lib/python3.6/site-packages/keras/backend/tensorflow_backend.py'): {'a'\
        'ttrib-starts': [],
        'first-line': 0L,
        'folded-linenos': [],
        'sel-line': 16L,
        'sel-line-start': 554L,
        'selection_end': 563L,
        'selection_start': 563L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pangeo/lib/python3.6/site-packages/pandas/core/generic.py'): {'a'\
        'ttrib-starts': [('NDFrame',
                          97),
                         ('NDFrame._get_axis_number',
                          345)],
        'first-line': 339L,
        'folded-linenos': [],
        'sel-line': 356L,
        'sel-line-start': 12711L,
        'selection_end': 12711L,
        'selection_start': 12711L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pangeo/lib/python3.6/site-packages/pandas/core/indexing.py'): {'a'\
        'ttrib-starts': [('_LocIndexer',
                          1413),
                         ('_LocIndexer._has_valid_type',
                          1442)],
        'first-line': 1466L,
        'folded-linenos': [],
        'sel-line': 1476L,
        'sel-line-start': 52819L,
        'selection_end': 52888L,
        'selection_start': 52888L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pangeo/lib/python3.6/site-packages/pandas/core/series.py'): {'a'\
        'ttrib-starts': [('Series',
                          119),
                         ('Series.apply',
                          2425)],
        'first-line': 2515L,
        'folded-linenos': [],
        'sel-line': 2537L,
        'sel-line-start': 81854L,
        'selection_end': 81854L,
        'selection_start': 81854L,
        'zoom': 0L},
                       loc('../../miniconda3/envs/pyfor_env/lib/python3.6/site-packages/rasterio/__init__.py'): {'a'\
        'ttrib-starts': [('NullHandler',
                          18)],
        'first-line': 5L,
        'folded-linenos': [],
        'sel-line': 18L,
        'sel-line-start': 346L,
        'selection_end': 385L,
        'selection_start': 385L,
        'zoom': 0L}}
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('custom',
                        [u'PYTHONPATH=""'])}
proj.pyexec = {None: ('custom',
                      u'/Users/ben/miniconda3/envs/DeepForest/bin/python')}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
search.replace-history = [u'batch_size']
search.search-history = [u'show',
                         u'window_',
                         u'window',
                         u'load_csv',
                         u'window_coord',
                         u'patches',
                         u'random',
                         u'input',
                         u'date',
                         u'score',
                         u'base_dir',
                         u'Cluster',
                         u'valida',
                         u'0.75',
                         u'threshold',
                         u'..',
                         u'warning',
                         u'cv2',
                         u'rgb_tile_dir',
                         u'rgb']
testing.stored-results = (1,
                          [],
                          {})
